/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "industry/gov/au/fi/arinv/Component-preload",
	"modules": {
		"industry/gov/au/fi/arinv/controller/Detail.controller.js": "/*global location */\r\nsap.ui.define([\r\n\t\"industry/gov/au/fi/arinv/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"industry/gov/au/fi/arinv/model/formatter\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"sap/ui/core/MessageType\",\r\n\t\"sap/ui/core/message/Message\",\r\n\t\"sap/ui/Device\"\r\n], function(BaseController, JSONModel, formatter, MessageBox, MessageToast, MessageType, Message, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"industry.gov.au.fi.arinv.controller.Detail\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\r\n\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\tvar oViewModel = new JSONModel({\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tlineItemListTitle: this.getResourceBundle().getText(\"detailLineItemTableHeading\"),\r\n\t\t\t\tmode: \"display\"\r\n\r\n\t\t\t});\r\n\t\t\tthis._emailCust = \"\";\r\n\t\t\tthis._addEmailCust = \"\";\r\n\t\t\tthis.getRouter().getTargets().getTarget(\"create\").attachDisplay(null, this._onDisplay, this);\r\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\t\t\tthis.setModel(oViewModel, \"detailView\");\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\r\n\t\t\t// Register the view with the message manager\r\n\t\t\tvar oMessageManager = sap.ui.getCore().getMessageManager();\r\n\t\t\toMessageManager.registerObject(this.getView(), true);\r\n\t\t\tvar oMessagesModel = oMessageManager.getMessageModel();\r\n\t\t\tthis.getView().setModel(oMessagesModel, \"message\");\r\n\r\n\t\t\tthis.oValueHelpDialog = null;\r\n\r\n\t\t},\r\n\r\n\t\tonTableListUpdateFinished: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar sTitle,\r\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tvar ocommonModel = this.getModel(\"commonModel\");\r\n\t\t\tvar actionFromDetails = ocommonModel.getProperty(\"/actionFromDetails\");\r\n\t\t\tvar actionFromLineItems = ocommonModel.getProperty(\"/actionFromLineItems\");\r\n\t\t\tocommonModel.setProperty(\"/actionFromDetails\", \"\");\r\n\t\t\tocommonModel.setProperty(\"/actionFromLineItems\", \"\");\r\n\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this.byId(\"lineItemsList\").getItems().length !== 0) {\r\n\t\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\r\n\r\n\t\t\t\t\tif (iTotalItems) {\r\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\r\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar oLineItemTable = this.byId(\"lineItemsList\");\r\n\r\n\t\t\tif (this._TCListItems) {\r\n\r\n\t\t\t\tiTotalItems = this.byId(\"lineItemsList\").getItems().length;\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\t\t\t}\r\n\r\n\t\t\tvar oTableItems = oLineItemTable.getItems();\r\n\r\n\t\t\tvar sHeaderTotal = oView.byId(\"headerInvoiceAmount\").getValue();\r\n\t\t\tvar sLineItemsTotal = 0;\r\n\t\t\tvar sBalance = 0;\r\n\t\t\tvar oTableItemContext = {};\r\n\r\n\t\t\t$.each(oTableItems, function(index, oTableItem) {\r\n\t\t\t\toTableItemContext = oTableItem.getBindingContext();\r\n\t\t\t\tsLineItemsTotal = sLineItemsTotal + parseFloat(oTableItemContext.getProperty(\"Wrbtr\"));\r\n\t\t\t});\r\n\r\n\t\t\tsBalance = sHeaderTotal - sLineItemsTotal;\r\n\t\t\tocommonModel.setProperty(\"/Balance\", sBalance);\r\n\r\n\t\t},\r\n\r\n\t\tonDelete: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\tsPath = oViewModel.getProperty(\"/sObjectPath\"),\r\n\t\t\t\tsObjectHeader = this._oODataModel.getProperty(sPath + \"/VendName\"),\r\n\t\t\t\tsQuestion = this._oResourceBundle.getText(\"deleteText\", sObjectHeader),\r\n\t\t\t\tsSuccessMessage = this._oResourceBundle.getText(\"deleteSuccess\", sObjectHeader);\r\n\r\n\t\t\tvar fnMyAfterDeleted = function() {\r\n\t\t\t\tMessageToast.show(sSuccessMessage);\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\tvar oNextItemToSelect = that.getOwnerComponent().oListSelector.findNextItem(sPath);\r\n\t\t\t\tthat.getModel(\"appView\").setProperty(\"/itemToSelect\", oNextItemToSelect.getBindingContext().getPath()); //save last deleted\r\n\t\t\t};\r\n\t\t\tthis._confirmDeletionByUser({\r\n\t\t\t\tquestion: sQuestion\r\n\t\t\t}, [sPath], fnMyAfterDeleted);\r\n\t\t},\r\n\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// Set busy indicator during view binding\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\tvar oCommonModel = this.getModel(\"commonModel\");\r\n\t\t\tvar oView = this.getView();\r\n\r\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sObjectPath,\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\tif (oView.getBindingContext()) {\r\n\t\t\t\t\t\t\tvar defObject = oView.getModel().getObject(\"/InvoiceDefaultsSet('\" + oView.getBindingContext().getProperty(\r\n\t\t\t\t\t\t\t\t\"UId\") + \"')\");\r\n\r\n\t\t\t\t\t\t\tif (defObject) {\r\n\t\t\t\t\t\t\t\toCommonModel.setProperty(\"/FinalLineItem\", defObject.FinalLineItem);\r\n\t\t\t\t\t\t\t\toCommonModel.setProperty(\"/FinalAttachSeq\", defObject.FinalAttachSeq);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\tparameters: {\r\n\t\t\t\t\texpand: 'InvoiceDefaults'\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for binding change event\r\n\t\t * @function\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\r\n\t\t\tvar oCommonModel = this.getModel(\"commonModel\");\r\n\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t// if object could not be found, the selection in the master list\r\n\t\t\t\t// does not make sense anymore.\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (sap.ui.getCore().getMessageManager()) {\r\n\t\t\t\tsap.ui.getCore().getMessageManager().removeAllMessages();\r\n\t\t\t}\r\n\r\n\t\t\tvar sPath = oElementBinding.getBoundContext().getPath(),\r\n\t\t\t\toResourceBundle = this.getResourceBundle(),\r\n\t\t\t\toObject = oView.getModel().getObject(sPath),\r\n\t\t\t\tsObjectId = oObject.UId,\r\n\t\t\t\tsObjectName = oObject.VendName;\r\n\r\n\t\t\toViewModel.setProperty(\"/sObjectId\", sObjectId);\r\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\r\n\t\t\toAppViewModel.setProperty(\"/itemToSelect\", sPath);\r\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\r\n\r\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\r\n\r\n\t\t\tif (!sObjectId) {\r\n\t\t\t\toViewModel.setProperty(\"/mode\", 'edit');\r\n\t\t\t}\r\n\t\t\tvar ocommonModel = this.getModel(\"commonModel\");\r\n\r\n\t\t\tocommonModel.setProperty(\"/actionFromDetails\", \"\");\r\n\t\t\tocommonModel.setProperty(\"/actionFromLineItems\", \"\");\r\n\r\n\t\t\tthis.removeNewItemsFromTable();\r\n\r\n\t\t\tthis.getModel(\"detailView\").setProperty(\"/mode\", \"display\");\r\n\r\n\t\t\tif (oView.getBindingContext()) {\r\n\t\t\t\tvar defObject = oView.getModel().getObject(\"/InvoiceDefaultsSet('\" + oView.getBindingContext().getProperty(\r\n\t\t\t\t\t\"UId\") + \"')\");\r\n\r\n\t\t\t\tif (defObject) {\r\n\t\t\t\t\toCommonModel.setProperty(\"/FinalLineItem\", defObject.FinalLineItem);\r\n\t\t\t\t\toCommonModel.setProperty(\"/FinalAttachSeq\", defObject.FinalAttachSeq);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toCommonModel.setProperty(\"/FinalLineItem\", \"00\");\r\n\t\t\t\t\toCommonModel.setProperty(\"/FinalAttachSeq\", \"0\");\r\n\t\t\t\t}\r\n\t\t\t\t/*Copy Email*/\r\n\t\t\t\tvar oContext = oView.getBindingContext();\r\n\t\t\t\tthis._emailCust = oContext.getProperty(\"EmailCust\");\r\n\t\t\t\tthis._addEmailCust = oContext.getProperty(\"AddcustEmail\");\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._oTemplate) {\r\n\t\t\t\tthis._oTemplate = sap.ui.xmlfragment({\r\n\t\t\t\t\tfragmentName: \"industry.gov.au.fi.arinv.view.InvoiceLineItems\",\r\n\t\t\t\t\ttype: \"XML\",\r\n\t\t\t\t\toController: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tvar oTable = oView.byId(\"lineItemsList\");\r\n\t\t\tthis.removeNewItemsFromTable();\r\n\t\t\toTable.unbindItems();\r\n\t\t\toTable.bindItems(sPath + \"/Items\", this._oTemplate);\r\n\r\n\t\t},\r\n\r\n\t\t_onMetadataLoaded: function() {\r\n\t\t\t// Store original busy indicator delay for the detail view\r\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\r\n\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\r\n\r\n\t\t\t// Make sure busy indicator is displayed immediately when\r\n\t\t\t// detail view is displayed for the first time\r\n\t\t\toViewModel.setProperty(\"/delay\", 0);\r\n\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\r\n\r\n\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for line item table\r\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t// Restore original busy indicator delay for the detail view\r\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\r\n\t\t},\r\n\r\n\t\tonAddItem: function(oEvent) {\r\n\r\n\t\t\tvar oRouter = this.getRouter();\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\tvar oContext = oView.getBindingContext();\r\n\t\t\tvar reqID = oView.getBindingContext().getProperty(\"UId\");\r\n\t\t\t//var reqTax = oView.getBindingContext().getProperty(\"VendTax\");\r\n\t\t\tvar TaxCode = \"\";\r\n\r\n\t\t\t/*\t\t\tif (reqTax === \"\" || !reqTax) {\r\n\t\t\t\t\t\t\tTaxCode = \"P1\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (reqTax === true) {\r\n\t\t\t\t\t\t\t\tTaxCode = \"P2\";\r\n\t\t\t\t\t\t\t} else if (reqTax === false) {\r\n\t\t\t\t\t\t\t\tTaxCode = \"P1\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}*/\r\n\r\n\t\t\tvar oTable = oView.byId(\"lineItemsList\");\r\n\r\n\t\t\tvar ocommonModel = this.getModel(\"commonModel\");\r\n\t\t\tvar FinalLineItem = ocommonModel.getProperty(\"/FinalLineItem\");\r\n\t\t\tFinalLineItem = parseInt(FinalLineItem, 10) + 10;\r\n\t\t\tocommonModel.setProperty(\"/FinalLineItem\", FinalLineItem);\r\n\r\n\t\t\tif (!reqID) {\r\n\t\t\t\treqID = \"\";\r\n\t\t\t}\r\n\r\n\t\t\tvar oNewItemContext = this.getModel().createEntry(\"InvoiceItemsentitySet\", {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tUId: reqID,\r\n\t\t\t\t\tBuzei: FinalLineItem.toString(),\r\n\t\t\t\t\tMwskz: TaxCode,\r\n\t\t\t\t\tWrbtr: \"0\"\r\n\t\t\t\t},\r\n\t\t\t\tcontext: oContext\r\n\r\n\t\t\t});\r\n\t\t\t/* Changed by RAM - 07-08-2018 - START */\r\n\t\t\tif (!this._oTemplate) {\r\n\t\t\t\tthis._oTemplate = sap.ui.xmlfragment({\r\n\t\t\t\t\tfragmentName: \"industry.gov.au.fi.arinv.view.InvoiceLineItems\",\r\n\t\t\t\t\ttype: \"XML\",\r\n\t\t\t\t\toController: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t/* Changed by RAM - 07-08-2018 - END */\r\n\r\n\t\t\tvar listItemForTable = this._oTemplate.clone();\r\n\r\n\t\t\tlistItemForTable.setBindingContext(oNewItemContext);\r\n\t\t\toTable.addItem(listItemForTable);\r\n\r\n\t\t\tvar iTotalItems = oTable.getItems().length;\r\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\r\n\t\t\tthis._collectNewItems(listItemForTable);\r\n\t\t\tthis._finalColumnListItem = listItemForTable;\r\n\t\t\tocommonModel.setProperty(\"/actionFromDetails\", \"Create\");\r\n\t\t\tocommonModel.setProperty(\"/actionFromLineItems\", \"\");\r\n\r\n\t\t\toRouter.getTargets().display(\"lineitem\", {\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tUId: reqID,\r\n\t\t\t\tBuzei: FinalLineItem.toString(),\r\n\t\t\t\tMwskz: TaxCode,\r\n\t\t\t\tnewItemContext: oNewItemContext,\r\n\t\t\t\theaderContext: oView.getBindingContext(),\r\n\t\t\t\ttableContext: oView.byId(\"lineItemsList\").getBindingContext(),\r\n\t\t\t\ttable: oView.byId(\"lineItemsList\"),\r\n\t\t\t\tfinalColumnListItem: this._finalColumnListItem,\r\n\t\t\t\tdetailViewModel: this.getModel(\"detailView\")\r\n\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\tonPressTableItem: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oDetailView = this.getModel(\"detailView\");\r\n\t\t\tvar sMode = oDetailView.getProperty(\"/mode\");\r\n\t\t\tvar sItemMode = \"\";\r\n\t\t\tvar ocommonModel = this.getModel(\"commonModel\");\r\n\r\n\t\t\tvar oAppView = this.getModel(\"appView\");\r\n\t\t\tvar sFromMyInbox = oAppView.getProperty(\"/fromMyInbox\");\r\n\r\n\t\t\tif (sFromMyInbox === false) {\r\n\t\t\t\tif (sMode === \"create\" || sMode === \"edit\") {\r\n\t\t\t\t\tsItemMode = \"edit\";\r\n\t\t\t\t\tocommonModel.setProperty(\"/actionFromDetails\", \"Change\");\r\n\t\t\t\t\tocommonModel.setProperty(\"/actionFromLineItems\", \"\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsItemMode = \"display\";\r\n\t\t\t\t\tocommonModel.setProperty(\"/actionFromDetails\", \"Display\");\r\n\t\t\t\t\tocommonModel.setProperty(\"/actionFromLineItems\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.getRouter().getTargets().display(\"lineitem\", {\r\n\t\t\t\t\tmode: sItemMode,\r\n\t\t\t\t\theaderContext: oView.getBindingContext(),\r\n\t\t\t\t\titemContext: oEvent.getSource().getBindingContext(),\r\n\t\t\t\t\ttableContext: oView.byId(\"lineItemsList\").getBindingContext(),\r\n\t\t\t\t\ttable: oView.byId(\"lineItemsList\")\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonEdit: function() {\r\n\t\t\tthis.getModel(\"detailView\").setProperty(\"/mode\", 'edit');\r\n\t\t},\r\n\r\n\t\tonCancel: function() {\r\n\r\n\t\t\t// check if the model has been changed\r\n\t\t\tif (this.getModel().hasPendingChanges()) {\r\n\t\t\t\t// get user confirmation first\r\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\r\n\t\t\t} else {\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t// cancel without confirmation\r\n\t\t\t\tvar mode = this.getModel(\"detailView\").getProperty(\"/mode\");\r\n\t\t\t\tif (mode === \"create\") {\r\n\t\t\t\t\tthis._navBack();\r\n\t\t\t\t\tthis.getModel(\"detailView\").setProperty(\"/mode\", \"display\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getModel(\"detailView\").setProperty(\"/mode\", \"display\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_showConfirmQuitChanges: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent();\r\n\t\t\tvar oModel = this.getModel();\r\n\t\t\tvar oDetailView = this.getModel(\"detailView\");\r\n\t\t\tvar oTable = this.getView().byId(\"lineItemsList\");\r\n\t\t\tvar UId = this.getView().getBindingContext().getObject().UId;\r\n\r\n\t\t\tvar that = this;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\r\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\r\n\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t\t\toModel.resetChanges();\r\n\t\t\t\t\t\t\tthat.removeNewItemsFromTable();\r\n\t\t\t\t\t\t\toTable.unbindItems();\r\n\r\n\t\t\t\t\t\t\tif (!UId) {\r\n\t\t\t\t\t\t\t\tvar mode = oDetailView.getProperty(\"/mode\");\r\n\t\t\t\t\t\t\t\tif (mode === \"create\") {\r\n\t\t\t\t\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\t\t\t\t\toDetailView.setProperty(\"/mode\", \"display\");\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\toDetailView.setProperty(\"/mode\", \"display\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\toDetailView.setProperty(\"/mode\", \"display\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t_navBack: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/appMode\", \"ShowHideMode\");\r\n\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t//this.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t//this.getRouter().getTargets().display(\"object\");\r\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onObjectMatched: function(oEvent) {\r\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\r\n\t\t\tfor (var value in oParameter) {\r\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\r\n\t\t\t}\r\n\t\t\tthis.getModel().metadataLoaded().then(function() {\r\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"InvoiceHeaderentitySet\", oParameter);\r\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t\tif (!this._oUploadTemplate) {\r\n\t\t\t\t\tthis._oUploadTemplate = sap.ui.xmlfragment({\r\n\t\t\t\t\t\tfragmentName: \"industry.gov.au.fi.arinv.view.UploadCollection\",\r\n\t\t\t\t\t\ttype: \"XML\",\r\n\t\t\t\t\t\toController: this\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar oUploadCollection = this.getView().byId(\"InvoiceAttachmentsCollection\");\r\n\t\t\t\toUploadCollection.bindItems(\"/\" + sObjectPath + \"/Attachments\", this._oUploadTemplate);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t_getMessagePopover: function() {\r\n\t\t\t// create popover lazily (singleton)\r\n\t\t\tif (!this._oMessagePopover) {\r\n\t\t\t\t// create popover lazily (singleton)\r\n\t\t\t\tthis._oMessagePopover = sap.ui.xmlfragment(this.getView().getId(), \"industry.gov.au.fi.arinv.view.MessagePopover\", this);\r\n\t\t\t\tthis.getView().addDependent(this._oMessagePopover);\r\n\t\t\t}\r\n\t\t\treturn this._oMessagePopover;\r\n\t\t},\r\n\r\n\t\tonMessagePopoverPress: function(oEvent) {\r\n\t\t\tthis._getMessagePopover().openBy(oEvent.getSource());\r\n\t\t},\r\n\r\n\t\tonSuccessPress: function(sMessage) {\r\n\t\t\tvar oMessage = new Message({\r\n\t\t\t\tmessage: sMessage,\r\n\t\t\t\ttype: MessageType.Success,\r\n\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t});\r\n\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\t\t},\r\n\r\n\t\tonErrorPress: function(sMessage) {\r\n\t\t\tvar oMessage = new Message({\r\n\t\t\t\tmessage: sMessage,\r\n\t\t\t\ttype: MessageType.Error,\r\n\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t});\r\n\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\t\t},\r\n\r\n\t\tonWarningPress: function(sMessage) {\r\n\t\t\tvar oMessage = new Message({\r\n\t\t\t\tmessage: sMessage,\r\n\t\t\t\ttype: MessageType.Warning,\r\n\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t});\r\n\r\n\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\t\t},\r\n\r\n\t\tonSave: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\r\n\t\t\tvar detailViewModel = this.getView().getModel(\"detailView\");\r\n\r\n\t\t\tsap.ui.getCore().getMessageManager().removeAllMessages();\r\n\r\n\t\t\t// abort if the  model has not been changed\r\n\t\t\tif (!oModel.hasPendingChanges()) {\r\n\t\t\t\tif (oModel.getDeferredGroups().length > 1) {\r\n\r\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t\t\toModel.submitChanges({\r\n\t\t\t\t\t\tgroupId: \"InvoiceItemDeleteRequest\",\r\n\t\t\t\t\t\tsuccess: function(oData) {\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t\tthat.onSuccessPress(\"Items deleted successfully\");\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.StartUpload();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (oModel.getDeferredGroups().length > 1) {\r\n\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t\toModel.submitChanges({\r\n\t\t\t\t\tgroupId: \"InvoiceItemDeleteRequest\",\r\n\t\t\t\t\tsuccess: function(oData) {\r\n\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\t\t\t\tthat.onSuccessPress(\"Items deleted successfully\");\r\n\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t//console.log(oError);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (oModel.hasPendingChanges()) {\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\r\n\t\t\t\tif (detailViewModel.getProperty(\"/mode\") === \"edit\" || detailViewModel.getProperty(\"/mode\") === \"create\") {\r\n\t\t\t\t\t// attach to the request completed event of the batch\r\n\t\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\r\n\t\t\t\t\t\tif (that._checkIfBatchRequestSucceeded(oEvent)) {\r\n\t\t\t\t\t\t\tthat._fnUpdateSuccess(oEvent);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t\tvar errors = sap.ui.getCore().getMessageManager().getMessageModel().getData();\r\n\r\n\t\t\t\t\t\t\terrors.sort(function(a, b) {\r\n\t\t\t\t\t\t\t\treturn (a.message > b.message) ? 1 : ((b.message > a.message) ? -1 : 0);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (that._oMessagePopover) {\r\n\t\t\t\t\t\t\t\tthat._oMessagePopover.destroy();\r\n\t\t\t\t\t\t\t\tthat._oMessagePopover = null;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar obj = {};\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0, len = errors.length; i < len; i++)\r\n\t\t\t\t\t\t\t\tobj[errors[i]['message']] = errors[i];\r\n\r\n\t\t\t\t\t\t\terrors = new Array();\r\n\r\n\t\t\t\t\t\t\tfor (var key in obj)\r\n\t\t\t\t\t\t\t\terrors.push(obj[key]);\r\n\r\n\t\t\t\t\t\t\tsap.ui.getCore().getMessageManager().getMessageModel().setData(errors);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\toModel.submitChanges();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_checkIfBatchRequestSucceeded: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\tvar aRequests = oEvent.getParameters().requests;\r\n\t\t\tvar oRequest;\r\n\t\t\tif (oParams.success) {\r\n\t\t\t\tif (aRequests) {\r\n\t\t\t\t\tfor (var i = 0; i < aRequests.length; i++) {\r\n\t\t\t\t\t\toRequest = oEvent.getParameters().requests[i];\r\n\t\t\t\t\t\tif (!oRequest.success) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tStartUpload: function(oEvent) {\r\n\t\t\tvar oUploadCollection = this.byId(\"InvoiceAttachmentsCollection\");\r\n\t\t\tvar cFiles = oUploadCollection.getItems().length;\r\n\t\t\tvar uploadInfo = cFiles + \" file(s)\";\r\n\r\n\t\t\tif (cFiles > 0) {\r\n\t\t\t\toUploadCollection.upload();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_fnUpdateSuccess: function(oEvent) {\r\n\t\t\tthis.StartUpload();\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getModel(\"detailView\").setProperty(\"/mode\", \"display\");\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar sPath = oView.getBindingContext().getPath();\r\n\r\n\t\t\tMessageToast.show(\"Request Saved Successfully\");\r\n\r\n\t\t\tvar oMessage = new Message({\r\n\t\t\t\tmessage: \"Request Saved Successfully\",\r\n\t\t\t\ttype: MessageType.Success,\r\n\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t});\r\n\r\n\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\r\n\t\t\tthis.removeNewItemsFromTable();\r\n\r\n\t\t\tvar oTable = this.getView().byId(\"lineItemsList\");\r\n\t\t\toTable.unbindItems();\r\n\t\t\toTable.bindItems(sPath + \"/Items\", this._oTemplate);\r\n\r\n\t\t\tif (oView.getElementBinding()) {\r\n\t\t\t\toView.getElementBinding().refresh();\r\n\t\t\t}\r\n\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\tUId: encodeURIComponent(oView.getBindingContext().getProperty(\"UId\"))\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\r\n\t\t_fnEntityCreationFailed: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\r\n\t\t},\r\n\r\n\t\t/* Retrieve CSRF token from OModel */\r\n\t\tgetXsrfToken: function() {\r\n\t\t\tvar oModel = this.getView().getModel();\r\n\r\n\t\t\treturn oModel.getSecurityToken();\r\n\t\t},\r\n\r\n\t\tonUploadChange: function(oEvent) {\r\n\t\t\tvar oUploadCollection = oEvent.getSource();\r\n\t\t\tvar oCustomerHeaderToken = new sap.m.UploadCollectionParameter({\r\n\t\t\t\tname: \"x-csrf-token\",\r\n\t\t\t\tvalue: this.getXsrfToken()\r\n\t\t\t});\r\n\r\n\t\t\toUploadCollection.addHeaderParameter(oCustomerHeaderToken);\r\n\r\n\t\t\tvar fileDetails = oEvent.getParameters().getParameter(\"files\")[0];\r\n\r\n\t\t\tvar oCommonModel = this.getModel(\"commonModel\");\r\n\t\t\tvar FinalAttachSeq = oCommonModel.getProperty(\"/FinalAttachSeq\");\r\n\t\t\tFinalAttachSeq = parseInt(FinalAttachSeq, 10) + 1;\r\n\t\t\toCommonModel.setProperty(\"/FinalAttachSeq\", FinalAttachSeq);\r\n\r\n\t\t\tvar sLastModified = new Date(fileDetails.lastModified);\r\n\t\t\tvar dateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({\r\n\t\t\t\tpattern: \"yyyyMMddKKmmss\"\r\n\t\t\t});\r\n\r\n\t\t\tsLastModified = dateFormat.format(sLastModified, false);\r\n\r\n\t\t\tvar s = encodeURIComponent(FinalAttachSeq) + \";fileName=\" +\r\n\t\t\t\tencodeURIComponent(fileDetails.name) + \";fileSize=\" +\r\n\t\t\t\tencodeURIComponent(fileDetails.size) + \";lastModified=\" +\r\n\t\t\t\tencodeURIComponent(sLastModified);\r\n\r\n\t\t\tvar c = new sap.m.UploadCollectionParameter({\r\n\t\t\t\tname: \"tslug\",\r\n\t\t\t\tvalue: s\r\n\t\t\t});\r\n\r\n\t\t\toUploadCollection.addHeaderParameter(c);\r\n\t\t},\r\n\r\n\t\tonBeforeUploadFile: function(oEvent) {\r\n\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\r\n\t\t\tvar tslug = oEvent.getParameters().getHeaderParameter(\"tslug\").getValue();\r\n\r\n\t\t\tvar sReqId = this.getView().getBindingContext().getProperty(\"UId\");\r\n\r\n\t\t\tvar s = encodeURIComponent(sReqId) + \";\" + tslug;\r\n\r\n\t\t\tvar c = new sap.m.UploadCollectionParameter({\r\n\t\t\t\tname: \"slug\",\r\n\t\t\t\tvalue: s\r\n\t\t\t});\r\n\r\n\t\t\toEvent.getParameters().addHeaderParameter(c);\r\n\r\n\t\t},\r\n\r\n\t\tonFormTypeSelect: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar bContext = this.getView().getBindingContext();\r\n\r\n\t\t\tif (oEvent.getSource().getSelectedIndex() === 0) {\r\n\t\t\t\toModel.setProperty(\"InvType\", \"1\", bContext);\r\n\t\t\t} else if (oEvent.getSource().getSelectedIndex() === 1) {\r\n\t\t\t\toModel.setProperty(\"InvType\", \"2\", bContext);\r\n\t\t\t} else {\r\n\t\t\t\toModel.setProperty(\"InvType\", \"3\", bContext);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonValueExceedSelect: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar bContext = this.getView().getBindingContext();\r\n\r\n\t\t\tif (oEvent.getSource().getSelectedIndex() === 0) {\r\n\t\t\t\toModel.setProperty(\"InvFlg\", \"1\", bContext);\r\n\t\t\t} else if (oEvent.getSource().getSelectedIndex() === 1) {\r\n\t\t\t\toModel.setProperty(\"InvFlg\", \"2\", bContext);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonUploadComplete: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oParameters = oEvent.getParameters().getParameters();\r\n\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\r\n\t\t\tif (oParameters.status >= 200 && oParameters.status <= 299) {\r\n\t\t\t\t//oView.byId(\"InvoiceAttachmentsCollection\").getBinding(\"items\").refresh(true);\r\n\t\t\t\tif (!this._oUploadTemplate) {\r\n\t\t\t\t\tthis._oUploadTemplate = sap.ui.xmlfragment({\r\n\t\t\t\t\t\tfragmentName: \"industry.gov.au.fi.arinv.view.UploadCollection\",\r\n\t\t\t\t\t\ttype: \"XML\",\r\n\t\t\t\t\t\toController: this\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tvar sPath = oView.getBindingContext().getPath();\r\n\t\t\t\tvar oUploadCollection = oView.byId(\"InvoiceAttachmentsCollection\");\r\n\t\t\t\toUploadCollection.bindItems({\r\n\t\t\t\t\tpath: sPath + \"/Attachments\",\r\n\t\t\t\t\ttemplate: this._oUploadTemplate,\r\n\t\t\t\t\tsuspended: false\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar oMessage = new Message({\r\n\t\t\t\t\tmessage: oParameters.fileName + \" uploaded successfully\",\r\n\t\t\t\t\ttype: MessageType.Success,\r\n\t\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\t\t\t} else {\r\n\t\t\t\tvar sResponse = JSON.parse(oParameters.responseRaw).error.message.value;\r\n\r\n\t\t\t\tsap.m.MessageBox.show(sResponse, {\r\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.ERROR,\r\n\t\t\t\t\ttitle: oParameters.fileName + 'Upload Failed',\r\n\t\t\t\t\tactions: sap.m.MessageBox.Action.OK\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgetCustomerDetails: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar sCustomer = oView.byId(\"customerCode\").getValue();\r\n\t\t\tvar sCompany = oView.byId(\"companyCode\").getValue();\r\n\t\t\tvar oViewModel = oView.getModel(\"detailView\");\r\n\t\t\tvar oContext = oView.getBindingContext();\r\n\t\t\tvar oTable = oView.byId(\"lineItemsList\");\r\n\t\t\tvar oTableItems = oTable.getItems();\r\n\t\t\tvar sInvType = oContext.getProperty(\"InvType\");\r\n\r\n\t\t\tif (sCompany !== \"\" && sCustomer !== \"\") {\r\n\r\n\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toModel.callFunction(\"/GetCustomerDetails\", {\r\n\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\turlParameters: {\r\n\t\t\t\t\t\t\"Company\": sCompany,\r\n\t\t\t\t\t\t\"Customer\": sCustomer,\r\n\t\t\t\t\t\t\"InvoiceType\": sInvType\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tcontext: null,\r\n\t\t\t\t\tsuccess: function(oCustomerDetails, response) {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\toModel.setProperty(\"CustName\", oCustomerDetails.CustName, oContext);\r\n\t\t\t\t\t\toModel.setProperty(\"Addr1\", oCustomerDetails.Addr1, oContext);\r\n\t\t\t\t\t\toModel.setProperty(\"Addr2\", oCustomerDetails.Addr2, oContext);\r\n\t\t\t\t\t\toModel.setProperty(\"Addr3\", oCustomerDetails.Addr3, oContext);\r\n\t\t\t\t\t\toModel.setProperty(\"Taxnum\", oCustomerDetails.Taxnum, oContext);\r\n\t\t\t\t\t\toModel.setProperty(\"EmailCust\", oCustomerDetails.EmailCust, oContext);\r\n\t\t\t\t\t\tthat._emailCust = oCustomerDetails.EmailCust;\r\n\t\t\t\t\t\toModel.setProperty(\"Zterm\", oCustomerDetails.Zterm, oContext);\r\n\t\t\t\t\t\t//change Tax Code\r\n\r\n\t\t\t\t\t\t$.each(oTableItems, function(index, oTableItem) {\r\n\t\t\t\t\t\t\tvar oTableItemContext = oTableItem.getBindingContext();\r\n\t\t\t\t\t\t\toModel.setProperty(\"Mwskz\", oCustomerDetails.TaxCode, oTableItemContext);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tremoveNewItemsFromTable: function(oEvent) {\r\n\r\n\t\t\tif (this._TCListItems) {\r\n\t\t\t\tvar table = this.getView().byId(\"lineItemsList\");\r\n\t\t\t\tvar TableColumnListItems = [];\r\n\t\t\t\tTableColumnListItems = this._TCListItems;\r\n\t\t\t\tvar i;\r\n\t\t\t\tfor (i = 0; i < TableColumnListItems.length; i++) {\r\n\t\t\t\t\tif (TableColumnListItems[i]) {\r\n\t\t\t\t\t\ttable.removeItem(TableColumnListItems[i]);\r\n\t\t\t\t\t\tTableColumnListItems[i].destroyDependents();\r\n\t\t\t\t\t\tTableColumnListItems[i].destroyCells();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (TableColumnListItems[i]) {\r\n\t\t\t\t\t\tTableColumnListItems[i].destroy();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._TCListItems = [];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_collectNewItems: function(oListItem) {\r\n\t\t\tvar TableColumnListItems = [];\r\n\r\n\t\t\tif (typeof this._TCListItems !== \"undefined\") {\r\n\t\t\t\tTableColumnListItems = this._TCListItems;\r\n\t\t\t}\r\n\r\n\t\t\tTableColumnListItems.push(oListItem);\r\n\t\t\tthis._TCListItems = TableColumnListItems;\r\n\t\t\tthis._finalColumnListItemIndex = this._TCListItems.length - 1;\r\n\t\t}\r\n\r\n\t\t,\r\n\r\n\t\tonDeleteTableItem: function(oEvent) {\r\n\t\t\tvar lineItemNumber = oEvent.getParameters().listItem.getBindingContext().getProperty(\"Buzei\");\r\n\t\t\tvar columnListItem = oEvent.getParameters().listItem;\r\n\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\tvar sQuestion = this._oResourceBundle.getText(\"deleteLineItemText\", lineItemNumber);\r\n\t\t\tvar sSuccessMessage = this._oResourceBundle.getText(\"deleteLineItemSuccess\", lineItemNumber);\r\n\r\n\t\t\tvar fnMyAfterDeleted = function() {\r\n\t\t\t\tMessageToast.show(sSuccessMessage);\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t};\r\n\r\n\t\t\tthis._confirmDeletionByUser({\r\n\t\t\t\tquestion: sQuestion\r\n\t\t\t}, columnListItem);\r\n\t\t},\r\n\r\n\t\t_onDisplay: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\tif (oData && oData.mode === \"create\") {\r\n\t\t\t\tthis._onDetailViewCreate(oEvent);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_confirmDeletionByUser: function(oConfirmation, oColumnListItem) {\r\n\r\n\t\t\tvar oModel = this.getView().getModel();\r\n\t\t\tvar table = this.getView().byId(\"lineItemsList\");\r\n\t\t\tvar oContext = oColumnListItem.getBindingContext();\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tvar fnDelete = function() {\r\n\t\t\t\toModel.deleteCreatedEntry(oContext);\r\n\t\t\t\tif (oModel.getDeferredGroups().length < 2) {\r\n\t\t\t\t\toModel.setDeferredGroups(oModel.getDeferredGroups().concat([\"InvoiceItemDeleteRequest\"]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oContext.getPath().startsWith(\"/InvoiceItemsentitySet(UId=\")) {\r\n\t\t\t\t\toModel.remove(oContext.sPath, {\r\n\t\t\t\t\t\tgroupId: \"InvoiceItemDeleteRequest\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttable.removeItem(oColumnListItem);\r\n\t\t\t\toColumnListItem.destroyDependents();\r\n\t\t\t\toColumnListItem.destroy();\r\n\r\n\t\t\t\t//update line item count\r\n\t\t\t\tif (this.byId(\"lineItemsList\").getItems()) {\r\n\t\t\t\t\tvar iTotalItems = this.byId(\"lineItemsList\").getItems().length;\r\n\t\t\t\t\tvar sTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\t\t\t\t}\r\n\r\n\t\t\t}.bind(this);\r\n\r\n\t\t\tvar fnDeleteCanceled = function() {}.bind(this);\r\n\r\n\t\t\tMessageBox.show(oConfirmation.question, {\r\n\t\t\t\ticon: oConfirmation.icon || MessageBox.Icon.WARNING,\r\n\t\t\t\ttitle: oConfirmation.title || this._oResourceBundle.getText(\"delete\"),\r\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnDelete();\r\n\t\t\t\t\t} else if (fnDeleteCanceled) {\r\n\t\t\t\t\t\tfnDeleteCanceled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onDetailViewCreate: function(oEvent) {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\tvar oModel = this.getModel();\r\n\r\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\r\n\t\t\t\toViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\r\n\t\t\t\tthis.getView().unbindObject();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (sap.ui.getCore().getMessageManager()) {\r\n\t\t\t\tsap.ui.getCore().getMessageManager().removeAllMessages();\r\n\t\t\t}\r\n\r\n\t\t\tthis.removeNewItemsFromTable();\r\n\t\t\tthis.getView().byId(\"lineItemsList\").unbindItems();\r\n\t\t\toViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createViewTitle\"));\r\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\r\n\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\r\n\t\t\toViewModel.setProperty(\"/mode\", \"create\");\r\n\r\n\t\t\tvar oNewHeaderContext = this.getModel().createEntry(\"InvoiceHeaderentitySet\", {\r\n\t\t\t\t\"properties\": {\r\n\t\t\t\t\t\"InvType\": \"1\",\r\n\t\t\t\t\t\"Fstatus\": \"\"\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tvar sPath = oNewHeaderContext.getPath();\r\n\r\n\t\t\toViewModel.setProperty(\"/sObjectPath\", sPath);\r\n\t\t\t/*Copy Email*/\r\n\t\t\tthis._emailCust = \"\";\r\n\t\t\tthis._addEmailCust = \"\";\r\n\t\t\tvar oCommonModel = this.getModel(\"commonModel\");\r\n\t\t\toCommonModel.setProperty(\"/FinalLineItem\", \"00\");\r\n\t\t\toCommonModel.setProperty(\"/FinalAttachSeq\", \"0\");\r\n\t\t\toCommonModel.setProperty(\"/actionFromDetails\", \"\");\r\n\t\t\toCommonModel.setProperty(\"/actionFromLineItems\", \"\");\r\n\t\t\toCommonModel.setProperty(\"/Balance\", 0);\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\tthis.getView().setBindingContext(oNewHeaderContext);\r\n\t\t\tvar oUploadCollection = this.getView().byId(\"InvoiceAttachmentsCollection\");\r\n\t\t\toUploadCollection.unbindItems();\r\n\t\t\tif (!this._oUploadTemplate) {\r\n\t\t\t\tthis._oUploadTemplate = sap.ui.xmlfragment({\r\n\t\t\t\t\tfragmentName: \"industry.gov.au.fi.arinv.view.UploadCollection\",\r\n\t\t\t\t\ttype: \"XML\",\r\n\t\t\t\t\toController: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toUploadCollection.bindItems({\r\n\t\t\t\tpath: sPath + \"/Attachments\",\r\n\t\t\t\ttemplate: this._oUploadTemplate,\r\n\t\t\t\tsuspended: true\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonSubmitRequest: function(oEven) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tsap.ui.getCore().getMessageManager().removeAllMessages();\r\n\r\n\t\t\tvar sNoError = this._mandatoryFieldValidations();\r\n\r\n\t\t\tif (sNoError === true) {\r\n\t\t\t\tvar sQuestion = this._oResourceBundle.getText(\"submitRequestText\");\r\n\t\t\t\tvar sSuccessMessage = this._oResourceBundle.getText(\"submitRequestSuccess\");\r\n\r\n\t\t\t\tvar fnAfterSubmitted = function() {\r\n\t\t\t\t\tMessageToast.show(sSuccessMessage);\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar fnSubmit = function() {\r\n\t\t\t\t\t// Calls the oData Delete service\r\n\t\t\t\t\tthis._callSubmit(fnAfterSubmitted);\r\n\t\t\t\t}.bind(this);\r\n\r\n\t\t\t\tvar fnSubmitCancelled = function() {\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t\tMessageBox.show(sQuestion, {\r\n\t\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\t\ttitle: this._oResourceBundle.getText(\"submit\"),\r\n\t\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\tfnSubmit();\r\n\t\t\t\t\t\t} else if (fnSubmitCancelled) {\r\n\t\t\t\t\t\t\tfnSubmitCancelled();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_callSubmit: function(fnAfterSubmitted) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oModel = this.getView().getModel();\r\n\t\t\tvar detailViewModel = this.getView().getModel(\"detailView\");\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\r\n\t\t\tif (!oModel.hasPendingChanges()) {\r\n\t\t\t\t// this.StartUpload();\r\n\t\t\t\tthat._fnSubmitProcess();\r\n\t\t\t} else {\r\n\t\t\t\tif (detailViewModel.getProperty(\"/mode\") === \"edit\" || detailViewModel.getProperty(\"/mode\") === \"create\") {\r\n\t\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\r\n\t\t\t\t\t\tif (that._checkIfBatchRequestSucceeded(oEvent)) {\r\n\t\t\t\t\t\t\tthat._fnSubmitProcess();\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t\t\t\tvar errors = sap.ui.getCore().getMessageManager().getMessageModel().getData();\r\n\r\n\t\t\t\t\t\t\terrors.sort(function(a, b) {\r\n\t\t\t\t\t\t\t\treturn (a.message > b.message) ? 1 : ((b.message > a.message) ? -1 : 0);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (that._oMessagePopover) {\r\n\t\t\t\t\t\t\t\tthat._oMessagePopover.destroy();\r\n\t\t\t\t\t\t\t\tthat._oMessagePopover = null;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tvar obj = {};\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0, len = errors.length; i < len; i++)\r\n\t\t\t\t\t\t\t\tobj[errors[i]['message']] = errors[i];\r\n\r\n\t\t\t\t\t\t\terrors = new Array();\r\n\r\n\t\t\t\t\t\t\tfor (var key in obj)\r\n\t\t\t\t\t\t\t\terrors.push(obj[key]);\r\n\r\n\t\t\t\t\t\t\tsap.ui.getCore().getMessageManager().getMessageModel().setData(errors);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\toModel.submitChanges();\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t_fnSubmitProcess: function() {\r\n\t\t\tthis.onSave();\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar sReqID = oView.getBindingContext().getProperty(\"UId\");\r\n\t\t\tvar oViewModel = oView.getModel(\"detailView\");\r\n\t\t\tvar oAppViewModel = oView.getModel(\"appView\");\r\n\t\t\tvar oContext = oView.getBindingContext();\r\n\t\t\tvar that = this;\r\n\t\t\tvar sComments = oView.getBindingContext().getProperty(\"SubmCmt\");\r\n\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\r\n\t\t\toModel.callFunction(\"/UpdateStatus\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"UId\": sReqID,\r\n\t\t\t\t\t\"Action\": \"REQ_SUBMIT\",\r\n\t\t\t\t\t\"Comments\": sComments\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcontext: null,\r\n\t\t\t\tsuccess: function(oVendorDetails, response) {\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toAppViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\tif (that._oMessagePopover) {\r\n\t\t\t\t\t\tthat._oMessagePopover.destroy();\r\n\t\t\t\t\t\tthat._oMessagePopover = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tMessageToast.show(\"Request \" + sReqID + \" Submited Successfully\");\r\n\t\t\t\t\tif (response.data.Messages) {\r\n\t\t\t\t\t\tvar oMessage = new Message({\r\n\t\t\t\t\t\t\tmessage: response.data.Messages,\r\n\t\t\t\t\t\t\ttype: MessageType.Success,\r\n\t\t\t\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\t\t\t\t\t\tMessageBox.show(response.data.Messages, {\r\n\t\t\t\t\t\t\ticon: sap.m.MessageBox.Icon.SUCCESS,\r\n\t\t\t\t\t\t\ttitle: 'Success',\r\n\t\t\t\t\t\t\tactions: sap.m.MessageBox.Action.OK\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar oMessage = new Message({\r\n\t\t\t\t\t\t\tmessage: \"Request \" + sReqID + \" Submited Successfully\",\r\n\t\t\t\t\t\t\ttype: MessageType.Success,\r\n\t\t\t\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\t\t\tthat.getModel(\"detailView\").setProperty(\"/mode\", \"display\");\r\n\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t// oView.byId(\"editButton\").setVisible(false);\r\n\t\t\t\t\tvar sPath = oView.getBindingContext().getPath();\r\n\r\n\t\t\t\t\tvar bReplace = !Device.system.phone;\r\n\r\n\t\t\t\t\tthat.removeNewItemsFromTable();\r\n\r\n\t\t\t\t\tvar oTable = that.getView().byId(\"lineItemsList\");\r\n\t\t\t\t\toTable.unbindItems();\r\n\t\t\t\t\toTable.bindItems(sPath + \"/Items\", that._oTemplate);\r\n\r\n\t\t\t\t\tif (oView.getElementBinding()) {\r\n\t\t\t\t\t\toView.getElementBinding().refresh();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthat.getRouter().navTo(\"object\", {\r\n\t\t\t\t\t\tUId: encodeURIComponent(oView.getBindingContext().getProperty(\"UId\"))\r\n\t\t\t\t\t}, bReplace);\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toAppViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\tvar sPath = oView.getBindingContext().getPath();\r\n\r\n\r\n\t\t\t\t\tthat.removeNewItemsFromTable();\r\n\r\n\t\t\t\t\tvar oTable = that.getView().byId(\"lineItemsList\");\r\n\t\t\t\t\toTable.unbindItems();\r\n\t\t\t\t\toTable.bindItems(sPath + \"/Items\", that._oTemplate);\r\n\r\n\t\t\t\t\tif (oView.getElementBinding()) {\r\n\t\t\t\t\t\toView.getElementBinding().refresh();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//\t}\t\t\t\r\n\t\t},\r\n\r\n\t\tonApproveRequest: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tvar sQuestion = this._oResourceBundle.getText(\"approvalRequestText\");\r\n\t\t\tvar sSuccessMessage = this._oResourceBundle.getText(\"approvalRequestSuccess\");\r\n\r\n\t\t\tvar fnAfterApproved = function() {\r\n\t\t\t\tMessageToast.show(sSuccessMessage);\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t};\r\n\r\n\t\t\tvar fnApprove = function() {\r\n\t\t\t\t// Calls the oData Delete service\r\n\t\t\t\tthis._callApproval(fnAfterApproved);\r\n\t\t\t}.bind(this);\r\n\r\n\t\t\tvar fnApproveCancelled = function() {\r\n\r\n\t\t\t};\r\n\r\n\t\t\tMessageBox.show(sQuestion, {\r\n\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\ttitle: this._oResourceBundle.getText(\"approval\"),\r\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnApprove();\r\n\t\t\t\t\t} else if (fnApproveCancelled) {\r\n\t\t\t\t\t\tfnApproveCancelled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_callApproval: function(fnAfterApproved) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oModel = this.getView().getModel();\r\n\t\t\tvar detailViewModel = this.getView().getModel(\"detailView\");\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\r\n\t\t\tthat._fnApprovalProcess();\r\n\r\n\t\t},\r\n\r\n\t\t_fnApprovalProcess: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar sReqID = oView.getBindingContext().getProperty(\"UId\");\r\n\t\t\tvar oViewModel = oView.getModel(\"detailView\");\r\n\t\t\tvar oAppViewModel = oView.getModel(\"appView\");\r\n\t\t\tvar oContext = oView.getBindingContext();\r\n\t\t\tvar sComments = oView.getBindingContext().getProperty(\"ApprCmt\");\r\n\t\t\tvar that = this;\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\r\n\t\t\toModel.callFunction(\"/UpdateStatus\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"UId\": sReqID,\r\n\t\t\t\t\t\"Action\": \"REQ_APPR\",\r\n\t\t\t\t\t\"Comments\": sComments\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcontext: null,\r\n\t\t\t\tsuccess: function(oVendorDetails, response) {\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toAppViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\tMessageToast.show(\"Request Approved Successfully\");\r\n\r\n\t\t\t\t\tvar oMessage = new Message({\r\n\t\t\t\t\t\tmessage: \"Request \" + sReqID + \" Approved Successfully\",\r\n\t\t\t\t\t\ttype: MessageType.Success,\r\n\t\t\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\t\t\t\t\tif (oView.getElementBinding()) {\r\n\t\t\t\t\t\toView.getElementBinding().refresh(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// that.fnRefreshPage(that,oView);\r\n\t\t\t\t},\r\n\r\n\t\t\t\terror: function(oError) {\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toAppViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//\t}\t\t\t\r\n\t\t},\r\n\r\n\t\tonRejectRequest: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tvar sQuestion = this._oResourceBundle.getText(\"rejectionRequestText\");\r\n\t\t\tvar sSuccessMessage = this._oResourceBundle.getText(\"rejectionRequestSuccess\");\r\n\t\t\tvar sACField = oView.byId(\"apprCommentsArea\");\r\n\r\n\t\t\tvar fnAfterRejected = function() {\r\n\t\t\t\tMessageToast.show(sSuccessMessage);\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t};\r\n\r\n\t\t\tvar fnReject = function() {\r\n\t\t\t\t// Calls the oData Delete service\r\n\t\t\t\tthis._callRejection(fnAfterRejected);\r\n\t\t\t}.bind(this);\r\n\r\n\t\t\tvar fnRejectCancelled = function() {\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar dialog = new sap.m.Dialog({\r\n\t\t\t\ttitle: \"Confirm\",\r\n\t\t\t\ttype: \"Message\",\r\n\t\t\t\tcontent: [\r\n\t\t\t\t\tnew sap.m.Label({\r\n\t\t\t\t\t\ttext: sQuestion,\r\n\t\t\t\t\t\tlabelFor: \"rejectDialogTextarea\"\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew sap.m.TextArea(\"rejectDialogTextarea\", {\r\n\t\t\t\t\t\tliveChange: function(oEvent) {\r\n\t\t\t\t\t\t\tvar sText = oEvent.getParameter(\"value\");\r\n\t\t\t\t\t\t\tvar parent = oEvent.getSource().getParent();\r\n\t\t\t\t\t\t\tparent.getBeginButton().setEnabled(sText.length > 0);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\tplaceholder: \"Please provide Rejection comments.\"\r\n\t\t\t\t\t})\r\n\t\t\t\t],\r\n\r\n\t\t\t\tbeginButton: new sap.m.Button({\r\n\t\t\t\t\ttext: \"Reject\",\r\n\t\t\t\t\tenabled: false,\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\tvar sText = sap.ui.getCore().byId(\"rejectDialogTextarea\").getValue();\r\n\t\t\t\t\t\tsACField.setValue(sText);\r\n\t\t\t\t\t\tfnReject();\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tendButton: new sap.m.Button({\r\n\t\t\t\t\ttext: \"Cancel\",\r\n\t\t\t\t\tpress: function() {\r\n\t\t\t\t\t\tdialog.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\r\n\t\t\t\tafterClose: function() {\r\n\t\t\t\t\tdialog.destroy();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tdialog.open();\r\n\r\n\t\t},\r\n\r\n\t\t_callRejection: function(fnAfterRejection) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oModel = this.getView().getModel();\r\n\t\t\tvar detailViewModel = this.getView().getModel(\"detailView\");\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\r\n\t\t\tthat._fnRejectProcess();\r\n\r\n\t\t},\r\n\r\n\t\t_fnRejectProcess: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar sReqID = oView.getBindingContext().getProperty(\"UId\");\r\n\t\t\tvar oViewModel = oView.getModel(\"detailView\");\r\n\t\t\tvar oAppViewModel = oView.getModel(\"appView\");\r\n\t\t\tvar oContext = oView.getBindingContext();\r\n\t\t\tvar sComments = oView.getBindingContext().getProperty(\"ApprCmt\");\r\n\t\t\tvar that = this;\r\n\t\t\t//\tif (sCompany !== \"\" && sVendor !== \"\") {\r\n\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\r\n\t\t\toModel.callFunction(\"/UpdateStatus\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\t\"UId\": sReqID,\r\n\t\t\t\t\t\"Action\": \"REQ_REJECT\",\r\n\t\t\t\t\t\"Comments\": sComments\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcontext: null,\r\n\t\t\t\tsuccess: function(oVendorDetails, response) {\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toAppViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\tMessageToast.show(\"Request Rejected Successfully\");\r\n\r\n\t\t\t\t\tvar oMessage = new Message({\r\n\t\t\t\t\t\tmessage: \"Request \" + sReqID + \" Rejected Successfully\",\r\n\t\t\t\t\t\ttype: MessageType.Success,\r\n\t\t\t\t\t\ttarget: \"/Dummy\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsap.ui.getCore().getMessageManager().addMessages(oMessage);\r\n\t\t\t\t\tif (oView.getElementBinding()) {\r\n\t\t\t\t\t\toView.getElementBinding().refresh(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// that.fnRefreshPage(that,oView);\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\r\n\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toAppViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//\t}\t\t\t\r\n\t\t},\r\n\r\n\t\tonInvoiceAmountChange: function(oEvent) {\r\n\t\t\tvar oLineItemTable = this.byId(\"lineItemsList\");\r\n\t\t\tvar oTableItems = oLineItemTable.getItems();\r\n\t\t\t//headerTotalAmount\r\n\t\t\tvar sHeaderTotal = oEvent.getSource().getValue();\r\n\t\t\tvar sLineItemsTotal = 0;\r\n\t\t\tvar sBalance = 0;\r\n\t\t\tvar ocommonModel = this.getModel(\"commonModel\");\r\n\t\t\tvar oTableItemContext = {};\r\n\r\n\t\t\t$.each(oTableItems, function(index, oTableItem) {\r\n\t\t\t\toTableItemContext = oTableItem.getBindingContext();\r\n\t\t\t\tsLineItemsTotal = sLineItemsTotal + parseFloat(oTableItemContext.getProperty(\"Wrbtr\"));\r\n\t\t\t});\r\n\r\n\t\t\tsBalance = sHeaderTotal - sLineItemsTotal;\r\n\t\t\tocommonModel.setProperty(\"/Balance\", sBalance);\r\n\t\t},\r\n\r\n\t\tonTableLipstUpdateStarted: function(oEvent) {\r\n\r\n\t\t},\r\n\t\tfnRefreshPage: function(that,oView) {\r\n\t\t\tthat.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthat.getModel(\"detailView\").setProperty(\"/mode\", \"display\");\r\n\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t \r\n\t\t\tvar sPath = oView.getBindingContext().getPath();\r\n\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\r\n\t\t\tthat.removeNewItemsFromTable();\r\n\r\n\t\t\tvar oTable = that.getView().byId(\"lineItemsList\");\r\n\t\t\toTable.unbindItems();\r\n\t\t\toTable.bindItems(sPath + \"/Items\", that._oTemplate);\r\n\r\n\t\t\tif (oView.getElementBinding()) {\r\n\t\t\t\toView.getElementBinding().refresh(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthat.getRouter().navTo(\"object\", {\r\n\t\t\t\tUId: encodeURIComponent(oView.getBindingContext().getProperty(\"UId\"))\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\t\tonFb5lnLink: function(oEvent) {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar sCustomer = this.getView().byId(\"customerCode\").getValue();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tif (!sCustomer) {\r\n\t\t\t\tsap.m.MessageBox.show(\"Please select a customer Number\", {\r\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.ERROR,\r\n\t\t\t\t\ttitle: \"Customer Number Required\",\r\n\t\t\t\t\tactions: sap.m.MessageBox.Action.OK\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t} else if (sCustomer === \"\") {\r\n\t\t\t\tsap.m.MessageBox.show(\"Please select a customer Number\", {\r\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.ERROR,\r\n\t\t\t\t\ttitle: \"Customer Number Required\",\r\n\t\t\t\t\tactions: sap.m.MessageBox.Action.OK\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\t\t\t\tvar that = this;\r\n\t\t\t\toModel.callFunction(\"/GetFBL5NURL\", {\r\n\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\turlParameters: {\r\n\t\t\t\t\t\t\"Customer\": sCustomer\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tcontext: null,\r\n\t\t\t\t\tsuccess: function(oData, response) {\r\n\t\t\t\t\t\tif (response.data.url!==\"\") {\r\n\t\t\t\t\t\t\t\tMessageBox.show(response.data.url, {\r\n\t\t\t\t\t\t\t\t\ticon: sap.m.MessageBox.Icon.INFORMATION,\r\n\t\t\t\t\t\t\t\t\ttitle: 'Information',\r\n\t\t\t\t\t\t\t\t\tactions: sap.m.MessageBox.Action.OK\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else { \r\n\t\t\t\t\t\t\tthat.openLineItem(sCustomer);\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(oError) {\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\r\n\r\n\t\t},\r\n\t\topenLineItem : function(sCustomer){\r\n\t\tif (sap.ushell && sap.ushell.Container && sap.ushell.Container.getService) {\r\n\t\t\t\tvar oCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\t\t\t\toCrossAppNavigator.isNavigationSupported(\r\n\t\t\t\t\t[{\r\n\t\t\t\t\t\tsemanticObject: \"ZFBL5N\",\r\n\t\t\t\t\t\taction: \"lookup\"\r\n\t\t\t\t\t}]).done(\r\n\t\t\t\t\tfunction(aResponse) {\r\n\t\t\t\t\t\tif (aResponse[0].supported == true) {\r\n\t\t\t\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\t\t\t\tsemanticObject: \"ZFBL5N\",\r\n\t\t\t\t\t\t\t\t\taction: \"lookup\"\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t\t\tcustomer: sCustomer\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t}\t\r\n\t\t},\r\n\t\t_mandatoryFieldValidations: function() {\r\n\r\n\t\t\tvar oContext = this.getView().getBindingContext();\r\n\t\t\tvar sBukrs = oContext.getProperty(\"Bukrs\");\r\n\t\t\tvar sKunnr = oContext.getProperty(\"Kunnr\");\r\n\t\t\tvar sBldat = oContext.getProperty(\"Bldat\");\r\n\t\t\tvar sWrbtr = oContext.getProperty(\"Wrbtr\");\r\n\t\t\tvar sSubmCmt = oContext.getProperty(\"SubmCmt\");\r\n\t\t\tvar sRefundCmnt = oContext.getProperty(\"RefundCmnt\");\r\n\t\t\tvar sAdjCmnt = oContext.getProperty(\"AdjCmnt\");\r\n\t\t\tvar sInvType = oContext.getProperty(\"InvType\");\r\n\t\t\tvar oMessage = {};\r\n\t\t\tvar sError = false;\r\n\t\t\tvar sMessage = \"\";\r\n\r\n\t\t\tif (!sBukrs) {\r\n\t\t\t\tsError = true;\r\n\t\t\t\tsMessage = \"Please enter Company Code.\";\r\n\t\t\t\tthis.onErrorPress(sMessage);\r\n\t\t\t}\r\n\r\n\t\t\tif (!sKunnr) {\r\n\t\t\t\tsError = true;\r\n\t\t\t\tsMessage = \"Please enter Customer Number.\";\r\n\t\t\t\tthis.onErrorPress(sMessage);\r\n\t\t\t}\r\n\r\n\t\t\tif (!sBldat) {\r\n\t\t\t\tsError = true;\r\n\t\t\t\tsMessage = \"Please enter date.\";\r\n\t\t\t\tthis.onErrorPress(sMessage);\r\n\t\t\t}\r\n\r\n\t\t\tif (!sWrbtr) {\r\n\t\t\t\tsError = true;\r\n\t\t\t\tsMessage = \"Please enter Invoice amount.\";\r\n\t\t\t\tthis.onErrorPress(sMessage);\r\n\t\t\t}\r\n\r\n\t\t\tif (!sSubmCmt) {\r\n\t\t\t\tsError = true;\r\n\t\t\t\tsMessage = \"Provide justification for this request (enter submission comments).\";\r\n\t\t\t\tthis.onErrorPress(sMessage);\r\n\t\t\t}\r\n\r\n\t\t\tif (sInvType === '2') {\r\n\t\t\t\tif (!sRefundCmnt) {\r\n\t\t\t\t\tsError = true;\r\n\t\t\t\t\tsMessage = \"Please enter the Explanation.\";\r\n\t\t\t\t\tthis.onErrorPress(sMessage);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (sInvType === '3') {\r\n\t\t\t\tif (!sAdjCmnt) {\r\n\t\t\t\t\tsError = true;\r\n\t\t\t\t\tsMessage = \"Please enter the Explanation.\";\r\n\t\t\t\t\tthis.onErrorPress(sMessage);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//The Vendor Total Amount and Total of Line Item Amount are not same.\r\n\t\t\tif (sError === true) {\r\n\r\n\t\t\t\tsap.m.MessageBox.show(sMessage, {\r\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.ERROR,\r\n\t\t\t\t\ttitle: \"Value Required\",\r\n\t\t\t\t\tactions: sap.m.MessageBox.Action.OK\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonCalculateInvoice: function() {\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tvar sPath = oView.getBindingContext().getPath();\r\n\t\t\tvar oModel = oView.getModel();\r\n\t\t\tvar deepObject = oModel.getProperty(sPath);\r\n\t\t\tvar oViewModel = oView.getModel(\"detailView\");\r\n\t\t\tvar oContext = this.getView().getBindingContext();\r\n\t\t\tvar sBukrs = oContext.getProperty(\"Bukrs\");\r\n\t\t\tvar sMessage = \"\";\r\n\r\n\t\t\tif (!sBukrs) {\r\n\t\t\t\tsMessage = \"Please enter Company Code.\";\r\n\t\t\t\tthis.onErrorPress(sMessage);\r\n\r\n\t\t\t\tsap.m.MessageBox.show(sMessage, {\r\n\t\t\t\t\ticon: sap.m.MessageBox.Icon.ERROR,\r\n\t\t\t\t\ttitle: \"Value Required\",\r\n\t\t\t\t\tactions: sap.m.MessageBox.Action.OK\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tdelete deepObject.Attachments;\r\n\t\t\tdelete deepObject.InvoiceDefaults;\r\n\t\t\tdelete deepObject.__metadata;\r\n\r\n\t\t\tvar oLineItemTable = this.byId(\"lineItemsList\");\r\n\t\t\tvar oTableItems = oLineItemTable.getItems();\r\n\t\t\tdeepObject.Items = [];\r\n\t\t\tvar itemObject = {};\r\n\t\t\t//var oTableItemContext = {};\r\n\r\n\t\t\t$.each(oTableItems, function(index, oTableItem) {\r\n\t\t\t\tsPath = oTableItem.getBindingContext().getPath();\r\n\t\t\t\titemObject = oModel.getProperty(sPath);\r\n\t\t\t\tdelete itemObject.__metadata;\r\n\r\n\t\t\t\tdeepObject.Items.push(itemObject);\r\n\t\t\t});\r\n\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t/*\tvar aDeferredGroup = oModel.getDeferredGroups().concat([\"batchCreate\"]);\r\n\t\t\toModel.setDeferredGroups(aDeferredGroup);\r\n\t\t\tvar mParameters = {\r\n\t\t\t\tgroupId: \"batchCreate\"\r\n\t\t\t};\r\n\t\t\t oModel.create(\"/InvoiceHeaderSet\", oEntry, mParameters);\r\n\t\t\t \t$.each(aLineItems, function(index, oLineItem) {\r\n\t\t\t\t\toModel.create(\"/InvoiceItemsSet\", oLineItem, mParameters);\t\r\n\t\t\t\t});*/\r\n\t\t\toModel.create(\"/InvoiceHeaderentitySet\", deepObject, {\r\n\t\t\t\tsuccess: this._fnCalculateInvoiceSuccess.bind(this),\r\n\t\t\t\terror: this._fnCalculateInvoiceFailed.bind(this)\r\n\t\t\t});\r\n\r\n\t\t},\r\n\r\n\t\t_fnCalculateInvoiceSuccess: function(oData) {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\tvar oModel = this.getModel();\r\n\t\t\tvar sPath = \"\";\r\n\t\t\tvar sLine = \"\";\r\n\t\t\tvar sContext = {};\r\n\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\tvar oContext = this.getView().getBindingContext();\r\n\r\n\t\t\tif (!oContext.UId || oContext.UId === \"\") {\r\n\t\t\t\toModel.setProperty(\"TotalIn\", oData.TotalIn, oContext);\r\n\t\t\t\toModel.setProperty(\"Gst\", oData.Gst, oContext);\r\n\t\t\t\toModel.setProperty(\"TotalEx\", oData.TotalEx, oContext);\r\n\t\t\t}\r\n\r\n\t\t\tvar oLineItemTable = this.byId(\"lineItemsList\");\r\n\t\t\tvar oTableItems = oLineItemTable.getItems();\r\n\r\n\t\t\tif (oData.Items) {\r\n\t\t\t\tif (oData.Items.results) {\r\n\t\t\t\t\t$.each(oTableItems, function(index, oTableItem) {\r\n\t\t\t\t\t\tsContext = oTableItem.getBindingContext();\r\n\t\t\t\t\t\tsLine = oTableItem.getBindingContext().getProperty(\"Buzei\");\r\n\r\n\t\t\t\t\t\t$.each(oData.Items.results, function(resIndex, resItem) {\r\n\t\t\t\t\t\t\tif (parseInt(sLine, 10) === parseInt(resItem.Buzei, 10)) {\r\n\t\t\t\t\t\t\t\toModel.setProperty(\"Hkont\", resItem.Hkont, sContext);\r\n\t\t\t\t\t\t\t\toModel.setProperty(\"Mwskz\", resItem.Mwskz, sContext);\r\n\t\t\t\t\t\t\t\t/*Changes by Ram - to make model context forcefully changed to submit pending changes*/\r\n\t\t\t\t\t\t\t\toModel.setProperty(\"Buzei\", \"\"+parseInt(resItem.Buzei), sContext);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the failure of creating/updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnCalculateInvoiceFailed: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t},\r\n\r\n\t\tonDeliveryMethodChange: function(oEvent) {\r\n\t\t\tvar oModel = this.getView().getModel();\r\n\t\t\tvar context = this.getView().getBindingContext();\r\n\t\t\tvar delMethod = oEvent.getSource().getSelectedKey();\r\n\t\t\tif (delMethod === \"MTC\") {\r\n\t\t\t\toModel.setProperty(\"EmailCust\", \"\", context);\r\n\t\t\t\toModel.setProperty(\"AddcustEmail\", \"\", context);\r\n\t\t\t} else {\r\n\t\t\t\toModel.setProperty(\"EmailCust\", this._emailCust, context);\r\n\t\t\t\toModel.setProperty(\"AddcustEmail\", this._addEmailCust, context);\r\n\t\t\t\tif(delMethod === \"EMTR\" || delMethod === \"MTRC\"){\r\n\t\t\t\t\t\tMessageBox.show(this.getResourceBundle().getText(\"emailMessageAboutInvoice\"), {\r\n\t\t\t\t\t\t\ticon: sap.m.MessageBox.Icon.INFORMATION,\r\n\t\t\t\t\t\t\ttitle: 'Information',\r\n\t\t\t\t\t\t\tactions: sap.m.MessageBox.Action.OK\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n});",
		"industry/gov/au/fi/arinv/controller/Master.controller.js": "/*global history */\r\nsap.ui.define([\r\n\t\"industry/gov/au/fi/arinv/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/m/GroupHeaderListItem\",\r\n\t\"sap/ui/Device\",\r\n\t\"industry/gov/au/fi/arinv/model/formatter\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"industry/gov/au/fi/arinv/model/grouper\",\r\n\t\"industry/gov/au/fi/arinv/model/GroupSortState\"\r\n], function(BaseController, JSONModel, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, MessageBox, grouper,\r\n\tGroupSortState) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"industry.gov.au.fi.arinv.controller.Master\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\t// Control state model\r\n\t\t\tvar oList = this.byId(\"list\"),\r\n\t\t\t\toViewModel = this._createViewModel(),\r\n\t\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t\t// taken care of by the master list itself.\r\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\t\t\tthis._oListSelector = this.getOwnerComponent().oListSelector;\r\n\t\t\tthis._oGroupSortState = new GroupSortState(oViewModel, grouper.Dmbtr(this.getResourceBundle()));\r\n\r\n\t\t\tthis._oList = oList;\r\n\t\t\t// keeps the filter and search state\r\n\t\t\tthis._oListFilterState = {\r\n\t\t\t\taFilter: [],\r\n\t\t\t\taSearch: []\r\n\t\t\t};\r\n\r\n\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeFirstShow: function() {\r\n\t\t\t\t\tthis._oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * After list data is available, this handler method updates the\r\n\t\t * master list counter and hides the pull to refresh control, if\r\n\t\t * necessary.\r\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonUpdateFinished: function(oEvent) {\r\n\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t// hide pull to refresh if necessary\r\n\t\t\tthis.byId(\"pullToRefresh\").hide();\r\n\t\t\tthis._findItem();\r\n\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the master search field. Applies current\r\n\t\t * filter value and triggers a new search. If the search field's\r\n\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t * and the list binding is refresh instead.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\tif (sQuery) {\r\n\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"VendName\", FilterOperator.Contains, sQuery)];\r\n\t\t\t} else {\r\n\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t}\r\n\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t * and group settings and refreshes the list binding.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonRefresh: function() {\r\n\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the sorter selection.\r\n\t\t * @param {sap.ui.base.Event} oEvent the select event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSort: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\r\n\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\r\n\r\n\t\t\tthis._applyGroupSort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the grouper selection.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search field event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonGroup: function(oEvent) {\r\n\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\r\n\t\t\t\taSorters = this._oGroupSortState.group(sKey);\r\n\r\n\t\t\tthis._applyGroupSort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the filter button to open the ViewSettingsDialog.\r\n\t\t * which is used to add or remove filters to the master list. This\r\n\t\t * handler method is also called when the filter bar is pressed,\r\n\t\t * which is added to the beginning of the master list when a filter is applied.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonOpenViewSettings: function() {\r\n\t\t\tif (!this._oViewSettingsDialog) {\r\n\t\t\t\tthis._oViewSettingsDialog = sap.ui.xmlfragment(\"industry.gov.au.fi.arinv.view.ViewSettingsDialog\", this);\r\n\t\t\t\tthis.getView().addDependent(this._oViewSettingsDialog);\r\n\t\t\t\t// forward compact/cozy style into Dialog\r\n\t\t\t\tthis._oViewSettingsDialog.addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\t}\r\n\t\t\tthis._oViewSettingsDialog.open();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler called when ViewSettingsDialog has been confirmed, i.e.\r\n\t\t * has been closed with 'OK'. In the case, the currently chosen filters\r\n\t\t * are applied to the master list, which can also mean that the currently\r\n\t\t * applied filters are removed from the master list, in case the filter\r\n\t\t * settings are removed in the ViewSettingsDialog.\r\n\t\t * @param {sap.ui.base.Event} oEvent the confirm event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonConfirmViewSettingsDialog: function(oEvent) {\r\n\t\t\tvar aFilterItems = oEvent.getParameters().filterItems,\r\n\t\t\t\taFilters = [],\r\n\t\t\t\taCaptions = [];\r\n\r\n\t\t\t// update filter state:\r\n\t\t\t// combine the filter array and the filter string\r\n\t\t\taFilterItems.forEach(function(oItem) {\r\n\t\t\t\tswitch (oItem.getKey()) {\r\n\t\t\t\t\tcase \"Filter1\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"Wrbtr\", FilterOperator.LE, 5000));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Filter2\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"Wrbtr\", FilterOperator.GT, 5000));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Filter3\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"InvType\", FilterOperator.EQ, \"1\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Filter4\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"InvType\", FilterOperator.EQ, \"2\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Filter9\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"InvType\", FilterOperator.EQ, \"3\"));\r\n\t\t\t\t\t\tbreak;\t\t\t\t\t\t\r\n\t\t\t\t\tcase \"Filter5\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"Fstatus\", FilterOperator.EQ, \"REQ_SAVE\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Filter6\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"Fstatus\", FilterOperator.EQ, \"REQ_SUBMIT\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Filter7\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"Fstatus\", FilterOperator.EQ, \"REQ_APPR\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Filter8\":\r\n\t\t\t\t\t\taFilters.push(new Filter(\"Fstatus\", FilterOperator.EQ, \"REQ_REJECT\"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\taCaptions.push(oItem.getText());\r\n\t\t\t});\r\n\r\n\t\t\tthis._oListFilterState.aFilter = aFilters;\r\n\t\t\tthis._updateFilterBar(aCaptions.join(\", \"));\r\n\t\t\tthis._applyFilterSearch();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the list selection event\r\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSelectionChange: function(oEvent) {\r\n\t\t\tvar that = this;\r\n\t\t\tvar oItem = oEvent.getParameter(\"listItem\") || oEvent.getSource();\r\n\t\t\tvar fnLeave = function() {\r\n\t\t\t\tthat._oODataModel.resetChanges();\r\n\t\t\t\tthat._showDetail(oItem);\r\n\t\t\t};\r\n\t\t\tif (this._oODataModel.hasPendingChanges()) {\r\n\t\t\t\tthis._leaveEditPage(fnLeave);\r\n\t\t\t} else {\r\n\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t}\r\n\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonBypassed: function() {\r\n\t\t\tthis._oList.removeSelections(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t * These headers are inserted into the master list to\r\n\t\t * group the master list's items.\r\n\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t * @public\r\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t */\r\n\t\tcreateGroupHeader: function(oGroup) {\r\n\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\ttitle: oGroup.text,\r\n\t\t\t\tupperCase: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Fiori Launchpad home page\r\n\t\t * @override\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Navigate back to FLP home\r\n\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  (attached declaratively) called when the add button in the master view is pressed. it opens the create view.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Creates the model for the view\r\n\t\t * @private\r\n\t\t */\r\n\t\t_createViewModel: function() {\r\n\t\t\treturn new JSONModel({\r\n\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\tsortBy: \"VendName\",\r\n\t\t\t\tgroupBy: \"None\"\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Ask for user confirmation to leave the edit page and discard all changes\r\n\t\t * @param {object} fnLeave - handles discard changes\r\n\t\t * @param {object} fnLeaveCancelled - handles cancel\r\n\t\t * @private\r\n\t\t */\r\n\t\t_leaveEditPage: function(fnLeave, fnLeaveCancelled) {\r\n\t\t\tvar sQuestion = this.getResourceBundle().getText(\"warningConfirm\");\r\n\t\t\tvar sTitle = this.getResourceBundle().getText(\"warning\");\r\n\r\n\t\t\tMessageBox.show(sQuestion, {\r\n\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\ttitle: sTitle,\r\n\t\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\r\n\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\tif (oAction === MessageBox.Action.OK) {\r\n\t\t\t\t\t\tfnLeave();\r\n\t\t\t\t\t} else if (fnLeaveCancelled) {\r\n\t\t\t\t\t\tfnLeaveCancelled();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * If the master route was hit (empty hash) we have to set\r\n\t\t * the hash to to the first item in the list as soon as the\r\n\t\t * listLoading is done and the first item in the list is known\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onMasterMatched: function() {\r\n\t\t\tvar sReqid = \"\";\r\n\r\n\t\t\tif (this.getOwnerComponent().getComponentData()) {\r\n\t\t\t\tvar sp = this.getOwnerComponent().getComponentData().startupParameters;\r\n\r\n\t\t\t\tif (sp) {\r\n\t\t\t\t\tif (sp.UId) {\r\n\t\t\t\t\t\tsReqid = sp.UId[0];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (sReqid !== \"\") {\r\n\t\t\t\tvar mButton = sap.ui.getCore().byId(\"application-ZFI_APREQUEST-approve-component---app--idAppControl-MasterBtn\");\r\n\r\n\t\t\t\tif (mButton) {\r\n\t\t\t\t\tmButton.setVisible(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\tUId: sReqid\r\n\t\t\t\t}, true);\r\n\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/fromMyInbox\", true);\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/appMode\", \"HideMode\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t\tif (!mParams.list.getSelectedItem()) {\r\n\r\n\t\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\t\t\t\tUId: encodeURIComponent(mParams.firstListitem.getBindingContext().getProperty(\"UId\"))\r\n\t\t\t\t\t\t\t}, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows the selected item on the detail page\r\n\t\t * On phones a additional history entry is created\r\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showDetail: function(oItem) {\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\r\n\t\t\t\tUId: encodeURIComponent(oItem.getBindingContext().getProperty(\"UId\"))\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\t\t//SAP__Origin: this.getView().getBindingContext().getProperty(\"SAP__Origin\"),\r\n\t\t/**\r\n\t\t * Sets the item count on the master list header\r\n\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateListItemCount: function(iTotalItems) {\r\n\t\t\tvar sTitle;\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyFilterSearch: function() {\r\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n\t\t\t\toViewModel = this.getModel(\"masterView\");\r\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\tif (aFilters.length !== 0) {\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t\t// only reset the no data text to default when no new search was triggered\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both group and sort state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyGroupSort: function(aSorters) {\r\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateFilterBar: function(sFilterBarText) {\r\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that adds \"/\" to the item's path \r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnGetPathWithSlash: function(sPath) {\r\n\t\t\treturn (sPath.indexOf(\"/\") === 0 ? \"\" : \"/\") + sPath;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * It navigates to the saved itemToSelect item. After delete it navigate to the next item. \r\n\t\t * After add it navigates to the new added item if it is displayed in the tree. If not it navigates to the first item.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_findItem: function() {\r\n\t\t\tvar itemToSelect = this.getModel(\"appView\").getProperty(\"/itemToSelect\");\r\n\t\t\tif (itemToSelect) {\r\n\t\t\t\tvar sPath = this._fnGetPathWithSlash(itemToSelect);\r\n\t\t\t\tvar oItem = this._oListSelector.findListItem(sPath);\r\n\t\t\t\tif (!oItem) { //item is not viewable in the tree. not in the current tree page.\r\n\t\t\t\t\toItem = this._oListSelector.findFirstItem();\r\n\t\t\t\t\tif (oItem) {\r\n\t\t\t\t\t\tsPath = oItem.getBindingContext().getPath();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oListSelector.selectAListItem(sPath);\r\n\t\t\t\tthis._showDetail(oItem);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonAdd: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", false);\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/appMode\", \"HideMode\");\r\n\r\n\t\t\tthis.getRouter().getTargets().display(\"create\", {\r\n\t\t\t\tmode: \"create\"\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t});\r\n});",
		"industry/gov/au/fi/arinv/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"industry/gov/au/fi/arinv/model/models\",\r\n\t\"industry/gov/au/fi/arinv/controller/ListSelector\",\r\n\t\"industry/gov/au/fi/arinv/controller/ErrorHandler\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(UIComponent, Device, models, ListSelector, ErrorHandler, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"industry.gov.au.fi.arinv.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: \"json\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\tvar oCommonModel = new JSONModel({\r\n\t\t\t\tactionFromDetails: \"\",\r\n\t\t\t\tactionFromLineItems: \"\",\r\n\t\t\t\tFinalLineItem: \"\",\r\n\t\t\t\tFinalAttachSeq: \"\",\r\n\t\t\t\tBalance:0\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\tthis.setModel(oCommonModel,\"commonModel\");\r\n\r\n\t\t\t// call the base component's init function and create the App view\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.oListSelector.destroy();\r\n\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"industry/gov/au/fi/arinv/view/Detail.view.xml": "<mvc:View controllerName=\"industry.gov.au.fi.arinv.controller.Detail\" xmlns=\"sap.m\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"sap.ui.layout\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\"\r\n\txmlns:smartField=\"sap.ui.comp.smartfield\">\r\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\"\r\n\t\ttitle=\"{parts:['UId','i18n>FormNewRequest'], formatter:'.formatter.getDetailViewTitle' }\" busy=\"{detailView>/busy}\"\r\n\t\tbusyIndicatorDelay=\"{detailView>/delay}\">\r\n\t\t<semantic:content>\r\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilterDetails\" icon=\"sap-icon://document\" tooltip=\"{i18n>detailIconTabBarInfo}\">\r\n\t\t\t\t\t\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t\t\t\t\t\t<RadioButtonGroup columns=\"3\" width=\"100%\" valueState=\"Success\" select=\"onFormTypeSelect\">\r\n\t\t\t\t\t\t\t\t<RadioButton groupName=\"FTYPE\" id=\"rb1\" selected=\"{= ${InvType} === '1' ? true: false }\" text=\"Invoice Request\" textAlign=\"Left\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t\t<RadioButton groupName=\"FTYPE\" id=\"rb2\" selected=\"{= ${InvType} === '2' ? true: false }\" text=\"Refund Request\" textAlign=\"Left\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t\t<RadioButton groupName=\"FTYPE\" id=\"rb3\" selected=\"{= ${InvType} === '3' ? true: false }\" text=\"Adjustment Request\" textAlign=\"Left\"\r\n\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t</RadioButtonGroup>\r\n\t\t\t\t\t\t\t<f:SimpleForm id=\"SimpleFormDetails\" editable=\"true\" layout=\"ResponsiveGridLayout\" labelSpanXL=\"6\" labelSpanL=\"6\" labelSpanM=\"12\"\r\n\t\t\t\t\t\t\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"0\" emptySpanL=\"0\" emptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"2\" columnsL=\"2\" columnsM=\"2\"\r\n\t\t\t\t\t\t\t\tsingleContainerFullSize=\"false\" class=\"ZSimpleFormTitle\">\r\n\t\t\t\t\t\t\t\t<f:content>\r\n\t\t\t\t\t\t\t\t\t<core:Title text=\" \"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Date\"/>\r\n\t\t\t\t\t\t\t\t\t<DatePicker id=\"invoiceDate\" displayFormat=\"short\" width=\"8em\"\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"{path:'Bldat', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true, UTC: true}}\"\r\n\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t\t\t<smartField:SmartLabel labelFor=\"companyCode\" text=\"What Company do you want the Invoice raised\"/>\r\n\t\t\t\t\t\t\t\t\t<smartField:SmartField value=\"{Bukrs}\" id=\"companyCode\" width=\"5rem\"\r\n\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"\r\n\t\t\t\t\t\t\t\t\t\tmaxLength=\"4\" change=\"getCustomerDetails\"/>\r\n\t\t\t\t\t\t\t\t\t<smartField:SmartLabel labelFor=\"customerCode\" text=\"SAP Customer ID\"/>\r\n\t\t\t\t\t\t\t\t\t<smartField:SmartField value=\"{Kunnr}\" id=\"customerCode\" width=\"7rem\"\r\n\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\" maxLength=\"10\" change=\"getCustomerDetails\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Button id=\"fb5lnLink\" press=\"onFb5lnLink\" type=\"Emphasized\" text=\"Open Line Items\" width=\"10rem\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Customer Name\"/>\r\n\t\t\t\t\t\t\t\t\t<Text text=\"{CustName}\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Customer Address\"/>\r\n\t\t\t\t\t\t\t\t\t<Text text=\"{Addr1}\"/>\r\n\t\t\t\t\t\t\t\t\t<!--<Label text=\"\"/>-->\r\n\t\t\t\t\t\t\t\t\t<!--<Text text=\"{Addr2}\"/>-->\r\n\t\t\t\t\t\t\t\t\t<!--<Label text=\"\"/>-->\r\n\t\t\t\t\t\t\t\t\t<!--<Text text=\"{Addr3}\"/>-->\r\n\t\t\t\t\t\t\t\t\t<Label text=\"ABN\"/>\r\n\t\t\t\t\t\t\t\t\t<Text text=\"{Taxnum}\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"{path:'InvType', formatter:'.formatter.getFlagText'}\"/>\r\n\t\t\t\t\t\t\t\t\t<RadioButtonGroup columns=\"3\" width=\"100%\" valueState=\"Success\" select=\"onValueExceedSelect\">\r\n\t\t\t\t\t\t\t\t\t\t<RadioButton groupName=\"INVFLG\" id=\"rb4\" selected=\"{= ${InvFlg} === '1' ? true: false }\" text=\"Yes\" textAlign=\"Left\"\r\n\t\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t\t\t\t<RadioButton groupName=\"INVFLG\" id=\"rb5\" selected=\"{= ${InvFlg} === '2' ? true: false }\" text=\"No\" textAlign=\"Left\"\r\n\t\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t\t\t</RadioButtonGroup>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Records Management Reference Number\"/>\r\n\t\t\t\t\t\t\t\t\t<Input value=\"{RmRef}\" width=\"100%\" editable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t\t\t<core:Title text=\" \"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Customer Reference\"/>\r\n\t\t\t\t\t\t\t\t\t<Input value=\"{Xblnr}\" width=\"10rem\" editable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"{path:'InvType', formatter:'.formatter.getLabelForAmount'}\"/>\r\n\t\t\t\t\t\t\t\t\t<Input id=\"headerInvoiceAmount\" value=\"{Wrbtr}\" type=\"Number\" placeholder=\"0.00\" width=\"10rem\"\r\n\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\" liveChange=\"onInvoiceAmountChange\"\r\n\t\t\t\t\t\t\t\t\t\ttextAlign=\"Right\"></Input>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Label text=\"{path:'InvType', formatter:'.formatter.getLabelForOriginalInvoice'}\" labelFor=\"OriginalInvoiceNumber\"/>\r\n\t\t\t\t\t\t\t\t\t<Input id=\"OriginalInvoiceNumber\" value=\"{OriginalInvoiceNumber}\" width=\"13rem\" editable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\" visible=\"{= ${InvType} === '2' || ${InvType} === '3' ? true: false }\"/>\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Invoice Delivery Method\" labelFor=\"InvoiceDeliveryMethod\" />\r\n\t\t\t\t\t\t\t\t\t<Select id=\"InvoiceDeliveryMethod\" selectedKey=\"{InvdelvMtd}\" width=\"16rem\" items=\"{/ZfiSrchDelMetSet}\" \r\n\t\t\t\t\t\t\t\t\tenabled=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\" \r\n\t\t\t\t\t\t\t\t\tvisible=\"{= ${InvType} === '2' ? false: true }\" change=\"onDeliveryMethodChange\">\r\n\t\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{Value}\" text=\"{Text}\"/>\r\n\t\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Customer Email(from SAP master id)\" labelFor=\"customerEmail\"/>\r\n\t\t\t\t\t\t\t\t\t<Input id=\"customerEmail\" value=\"{EmailCust}\" width=\"13rem\" editable=\"false\" visible=\"{= ${InvType} === '2' ? false: true }\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Alternate Customer Email\" labelFor=\"addCustomerEmail\" />\r\n\t\t\t\t\t\t\t\t\t<Input id=\"addCustomerEmail\" value=\"{AddcustEmail}\" width=\"13rem\" editable=\"{= ((${InvdelvMtd} === 'EMTC') || (${InvdelvMtd} === 'MTRC')) &amp;&amp; (${detailView>/mode} === 'edit' || ${detailView>/mode} === 'create') &amp;&amp; ${Fstatus} !== 'REQ_SUBMIT' &amp;&amp; ${Fstatus} !== 'REQ_APPR' &amp;&amp; ${Fstatus} !== 'REQ_REJECT' }\" visible=\"{= ${InvType} === '2' ? false: true }\"/>\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<!--\t<Label text=\"Short Text\"/>\r\n\t\t\t\t\t\t\t\t\t<TextArea value=\"{Sgtxt}\" maxLength=\"50\" width=\"100%\" rows=\"1\"\r\n\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\t\t\t\t\t\t\t\t\t-->\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Long Text\"/>\r\n\t\t\t\t\t\t\t\t\t<TextArea value=\"{LnTxt}\" maxLength=\"1333\" width=\"100%\" rows=\"2\"\r\n\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<smartField:SmartLabel labelFor=\"paymentTerm\" text=\"Payment Terms\" visible=\"{= ${InvType} === '2' ? false: true }\"/>\r\n\t\t\t\t\t\t\t\t\t<smartField:SmartField id=\"paymentTerm\" value=\"{Zterm}\" width=\"5rem\" editable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"  visible=\"{= ${InvType} === '2' ? false: true }\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Refund Reason\"/>\r\n\t\t\t\t\t\t\t\t\t<Select id=\"refundReason\" selectedKey=\"{RefundReason}\" width=\"25rem\" items=\"{/ZfiSrchRefRegSet}\" enabled=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\" \r\n\t\t\t\t\t\t\t\t\tvisible=\"{= ${InvType} === '2' ? true: false }\" forceSelection=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{Value}\" text=\"{Text}\"/>\r\n\t\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Explanation\" labelFor=\"refundCmtInput\"/>\r\n\t\t\t\t\t\t\t\t\t<Input id=\"refundCmtInput\" value=\"{RefundCmnt}\" editable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\" visible=\"{= ${InvType} === '2' ? true: false }\"/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Reason for Adjustment\" />\r\n\t\t\t\t\t\t\t\t\t<Select id=\"reasonForAdjustment\" selectedKey=\"{AdjReason}\" width=\"20rem\" items=\"{/ZfiSrchRegAdjSet}\" enabled=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"\r\n\t\t\t\t\t\t\t\t\tvisible=\"{= ${InvType} === '3' ? true: false }\" forceSelection=\"false\">\r\n\t\t\t\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t\t\t\t<core:Item key=\"{Value}\" text=\"{Text}\"/>\r\n\t\t\t\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t\t\t\t</Select>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Explanation\" labelFor=\"adjCmtInput\"/>\r\n\t\t\t\t\t\t\t\t\t<Input id=\"adjCmtInput\" value=\"{AdjCmnt}\" editable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\" visible=\"{= ${InvType} === '3' ? true: false }\"/>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</f:content>\r\n\t\t\t\t\t\t\t</f:SimpleForm>\r\n\t\t\t\t\t\t</VBox>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Table id=\"lineItemsList\" width=\"auto\" noDataText=\"{i18n>detailLineItemTableNoDataText}\"\r\n\t\t\t\t\t\t\tbusyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\" updateFinished=\"onTableListUpdateFinished\"\r\n\t\t\t\t\t\t\tmode=\"{parts:['detailView>/mode','Fstatus'], formatter:'.formatter.getTableMode'}\" delete=\"onDeleteTableItem\" growing=\"false\"\r\n\t\t\t\t\t\t\tupdateStarted=\"onTableLipstUpdateStarted\" >\r\n\r\n\t\t\t\t\t\t\t<headerToolbar>\r\n\t\t\t\t\t\t\t\t<Toolbar id=\"lineItemsToolbar\">\r\n\t\t\t\t\t\t\t\t\t<Title id=\"lineItemsHeader\" text=\"{detailView>/lineItemListTitle}\"/>\r\n\t\t\t\t\t\t\t\t\t<ToolbarSpacer/>\r\n\t\t\t\t\t\t\t\t\t<Button text=\"Add Item\" icon=\"sap-icon://add\" press=\"onAddItem\" type=\"Emphasized\" tooltip=\"New Line Item\"\r\n\t\t\t\t\t\t\t\t\t\tvisible=\"{= (${detailView>/mode} === 'edit' || ${detailView>/mode} === 'create') &amp;&amp; ${Fstatus} !== 'REQ_SUBMIT' &amp;&amp; ${Fstatus} !== 'REQ_APPR' &amp;&amp; ${Fstatus} !== 'REQ_REJECT' ? true: false}\"/>\r\n\t\t\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t\t\t</headerToolbar>\r\n\t\t\t\t\t\t\t<columns>\r\n<!--\t\t\t\t\t\t\t\t<Column hAlign=\"Left\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"Item Number\"/>\r\n\t\t\t\t\t\t\t\t</Column>-->\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\" popinDisplay=\"Inline\" width=\"13%\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"GL Account\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\" popinDisplay=\"Inline\"  width=\"13%\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"Product ID\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\" popinDisplay=\"Inline\"  width=\"5%\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"Quantity\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\" popinDisplay=\"Inline\" width=\"5%\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"UoM\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\" popinDisplay=\"Inline\" width=\"10%\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"Amount\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\" popinDisplay=\"Inline\" width=\"13%\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"Cost Centre\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\" popinDisplay=\"Inline\" width=\"18%\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"WBS\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\" popinDisplay=\"Inline\" width=\"5%\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"Tax Code\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Left\">\r\n\t\t\t\t\t\t\t\t\t<Text text=\"Short Text\"/>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</columns>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t<VBox class=\"sapUiSmallMargin\" alignContent=\"End\">\r\n\t\t\t\t\t\t\t<f:SimpleForm id=\"SimpleFormTotals\" editable=\"true\" layout=\"ResponsiveGridLayout\" labelSpanXL=\"10\" labelSpanL=\"10\" labelSpanM=\"12\"\r\n\t\t\t\t\t\t\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"0\" emptySpanL=\"0\" emptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\"\r\n\t\t\t\t\t\t\t\tsingleContainerFullSize=\"false\" class=\"ZSimpleFormTitle\">\r\n\t\t\t\t\t\t\t\t<f:content>\r\n\t\t\t\t\t\t\t\t\t<core:Title text=\" \"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"TOTAL INVOICE VALUE (GST EXCLUSIVE)\"/>\r\n\t\t\t\t\t\t\t\t\t<Input value=\"{TotalEx}\" editable=\"false\" placeholder=\"0.00\" width=\"10rem\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"TOTAL GST\"/>\r\n\t\t\t\t\t\t\t\t\t<Input value=\"{Gst}\" editable=\"false\" placeholder=\"0.00\" width=\"10rem\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"TOTAL INVOICE VALUE (GST INCLUSIVE)\"/>\r\n\t\t\t\t\t\t\t\t\t<Input value=\"{TotalIn}\" editable=\"false\" placeholder=\"0.00\" width=\"10rem\"/>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</f:content>\r\n\t\t\t\t\t\t\t</f:SimpleForm>\r\n\t\t\t\t\t\t</VBox>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilterComments\" icon=\"sap-icon://comment\" tooltip=\"{i18n>detailIconTabBarComments}\">\r\n\t\t\t\t\t\t<VBox class=\"sapUiSmallMargin\">\r\n\t\t\t\t\t\t\t<f:SimpleForm id=\"SimpleFormComments\" editable=\"true\" layout=\"ResponsiveGridLayout\" labelSpanXL=\"4\" labelSpanL=\"4\" labelSpanM=\"12\"\r\n\t\t\t\t\t\t\t\tlabelSpanS=\"12\" adjustLabelSpan=\"false\" emptySpanXL=\"0\" emptySpanL=\"0\" emptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"2\" columnsL=\"2\" columnsM=\"1\"\r\n\t\t\t\t\t\t\t\tsingleContainerFullSize=\"false\" class=\"ZSimpleFormTitle\">\r\n\t\t\t\t\t\t\t\t<f:content>\r\n\t\t\t\t\t\t\t\t\t<core:Title text=\" \"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Submission Comments\"/>\r\n\t\t\t\t\t\t\t\t\t<TextArea value=\"{SubmCmt}\" maxLength=\"255\" width=\"100%\" rows=\"3\"\r\n\t\t\t\t\t\t\t\t\t\teditable=\"{parts:[{path:'Fstatus'},{path:'detailView>/mode'}], formatter:'.formatter.isEditable'}\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Submitted By\"/>\r\n\t\t\t\t\t\t\t\t\t<Input value=\"{InvoiceDefaults/SubmittedBy}\" width=\"100%\" editable=\"false\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Submission Date\"/>\r\n\t\t\t\t\t\t\t\t\t<DatePicker id=\"SubmitDate\" displayFormat=\"short\" width=\"8em\"\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"{path:'SubmDt', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true}}\" editable=\"false\"/>\r\n\t\t\t\t\t\t\t\t\t<Label/><Text/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Approver Comments\"/>\r\n\t\t\t\t\t\t\t\t\t<TextArea value=\"{ApprCmt}\" id=\"apprCommentsArea\" maxLength=\"255\" width=\"100%\" rows=\"3\" editable=\"{= ${Fstatus} === 'REQ_SUBMIT' &amp;&amp; ${InvoiceDefaults/Approver} === 'Y' ? true: false}\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Approved/Rejected By\"/>\r\n\t\t\t\t\t\t\t\t\t<Input id=\"ActionedBy\" value=\"{InvoiceDefaults/ActionedBy}\" width=\"100%\" editable=\"false\"/>\r\n\t\t\t\t\t\t\t\t\t<Label text=\"Approval/Rejection Date\"/>\r\n\t\t\t\t\t\t\t\t\t<DatePicker id=\"ApprDt\" displayFormat=\"short\" width=\"8em\"\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"{path:'ApproveDate', type:'sap.ui.model.type.Date', formatOptions: { style: 'medium', strictParsing: true}}\" editable=\"false\"/>\r\n\t\t\t\t\t\t\t\t</f:content>\r\n\t\t\t\t\t\t\t</f:SimpleForm>\r\n\t\t\t\t\t\t</VBox>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilterAttachments\" icon=\"sap-icon://attachment\" tooltip=\"{i18n>detailIconTabBarAttachments}\">\r\n\t\t\t\t\t\t<UploadCollection id=\"InvoiceAttachmentsCollection\" maximumFilenameLength=\"120\" maximumFileSize=\"10\" multiple=\"false\"\r\n\t\t\t\t\t\t\tsameFilenameAllowed=\"false\" noDataText=\"Please ensure all supporting documents are attached with the submission\"\r\n\t\t\t\t\t\t\tnoDataDescription=\"Use &quot;+&quot; button to upload files.\" instantUpload=\"false\" uploadUrl=\"/sap/opu/odata/sap/ZFI_AR_INVOICE_SRV/InvoiceAttachmentsentitySet/\" change=\"onUploadChange\"\r\n\t\t\t\t\t\t\tbeforeUploadStarts=\"onBeforeUploadFile\" uploadComplete=\"onUploadComplete\" fileDeleted=\"onFileDeleted\"  \r\n\t\t\t\t\t\t\tfilenameLengthExceed=\"onFilenameLengthExceed\" fileSizeExceed=\"onFileSizeExceed\" typeMissmatch=\"onTypeMissmatch\"\r\n\t\t\t\t\t\t\titems=\"{ path: 'Attachments', sorter: [{ path: 'Name', descending: false, group: false }] }\">\r\n\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t<UploadCollectionItem documentId=\"{Name}\" fileName=\"{Filename}\"\r\n\t\t\t\t\t\t\t\t\turl=\"{ parts: ['UId', 'Line'], formatter: '.formatter.buildFileGetUrl' }\" visibleEdit=\"false\" \r\n\t\t\t\t\t\t\t\t\tvisibleDelete=\"false\"\r\n\t\t\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t\t<attributes>\r\n\t\t\t\t\t\t\t\t\t\t<ObjectAttribute title=\"Creation Time\" text=\"{path:'Creationtime', formatter: '.formatter.getDateAndTime'}\"/>\r\n\t\t\t\t\t\t\t\t\t\t<ObjectAttribute title=\"File Size\" text=\"{path:'Filesize',formatter: '.formatter.removeLeadingZeroes'} KB\"/>\r\n\t\t\t\t\t\t\t\t\t</attributes>\r\n\t\t\t\t\t\t\t\t</UploadCollectionItem>\r\n\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t</UploadCollection>\r\n\t\t\t\t\t</IconTabFilter>\r\n\t\t\t\t</items>\r\n\t\t\t</IconTabBar>\r\n\t\t</semantic:content>\r\n\t\t<!--<semantic:customHeaderContent>-->\r\n\t\t<!--\t<Button icon=\"sap-icon://hint\" type=\"Emphasized\"-->\r\n\t\t<!--\t\tpress=\"onMessagePopoverPress\"/>-->\r\n\t\t<!--</semantic:customHeaderContent>-->\r\n\t\t<semantic:customFooterContent>\r\n\t\t\t<Button icon=\"sap-icon://alert\" text=\"{=${message>/}.length}\" visible=\"{=${message>/}.length > 0}\" type=\"Emphasized\"\r\n\t\t\t\tpress=\"onMessagePopoverPress\"/>\r\n\t\t\t<ToolbarSpacer/>\r\n\t\t\t<Button id=\"editButton\" press=\"onEdit\" text=\"{= ${Fstatus} !== 'REQ_SUBMIT' ? 'Edit' : 'Add Attachment'}\" type=\"Emphasized\"\r\n\t\t\t\tvisible=\"{= ${detailView>/mode} === 'display' &amp;&amp; (${Fstatus} !== 'REQ_REJECT' &amp;&amp; ${Fstatus} !== 'REQ_APPR' &amp;&amp; ${Fstatus} !== 'REQ_SUBMIT' || ${InvoiceDefaults/Approver} === 'Y') ? true: false}\"/>\r\n\t\t\t<Button id=\"calculateButton\" press=\"onCalculateInvoice\" text=\"Calculate Invoice\" type=\"Emphasized\"\r\n\t\t\t\tvisible=\"{= (${detailView>/mode} === 'edit' || ${detailView>/mode} === 'create') &amp;&amp; ${Fstatus} !== 'REQ_APPR' &amp;&amp; ${Fstatus} !== 'REQ_REJECT' &amp;&amp; ${Fstatus} !== 'REQ_SUBMIT' ? true: false}\"/>\t\t\t\t\r\n\t\t\t<Button id=\"saveButton\" press=\"onSave\" text=\"Save\" type=\"Emphasized\"\r\n\t\t\t\tvisible=\"{= (${detailView>/mode} === 'edit' || ${detailView>/mode} === 'create') &amp;&amp; ${Fstatus} !== 'REQ_APPR' &amp;&amp; ${Fstatus} !== 'REQ_REJECT' ? true: false}\"/>\r\n\t\t\t<Button id=\"submitButton\" press=\"onSubmitRequest\" text=\"Submit\" type=\"Accept\"\r\n\t\t\t\tvisible=\"{= (${detailView>/mode} === 'edit' || ${detailView>/mode} === 'create') &amp;&amp; ${Fstatus} !== 'REQ_SUBMIT' &amp;&amp; ${Fstatus} !== 'REQ_APPR' &amp;&amp; ${Fstatus} !== 'REQ_REJECT' ? true: false}\"/>\r\n\t\t\t<Button id=\"approveButton\" press=\"onApproveRequest\" text=\"Approve\" type=\"Accept\"\r\n\t\t\t\tvisible=\"{= ${Fstatus} === 'REQ_SUBMIT' &amp;&amp; ${InvoiceDefaults/Approver} === 'Y' ? true: false}\"/>\r\n\t\t\t<Button id=\"RejectButton\" press=\"onRejectRequest\" text=\"Reject\" type=\"Reject\"\r\n\t\t\t\tvisible=\"{= ${Fstatus} === 'REQ_SUBMIT' &amp;&amp; ${InvoiceDefaults/Approver} === 'Y' ? true: false}\"/>\r\n\t\t\t<Button id=\"cancelButton\" press=\"onCancel\" text=\"Cancel\" type=\"Reject\"\r\n\t\t\t\tvisible=\"{= ${detailView>/mode} === 'edit' || ${detailView>/mode} === 'create' ? true: false}\"/>\r\n\t\t</semantic:customFooterContent>\r\n\t</semantic:DetailPage>\r\n</mvc:View>",
		"industry/gov/au/fi/arinv/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\",\r\n\t    \"sap/ui/core/message/Message\",\r\n\t    \"sap/ui/core/MessageType\"\r\n\t    \r\n], function(UI5Object, MessageBox, Message, MessageType) {\r\n\t\"use strict\";\r\n\r\n\treturn UI5Object.extend(\"industry.gov.au.fi.arinv.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias industry.gov.au.fi.arinv.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(this.onRequestFailed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event Handler for Request Fail event\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {object} oEvent an event containing the response data\r\n\t\t * @private\r\n\t\t */\r\n\t\tonRequestFailed: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\tif ((oParams.response.statusCode !== \"404\") || (oParams.response.statusCode === 404 &&\r\n\t\t\t\t\toParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function(sAction) {\r\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\r\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox}.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sTitle the MessageBox title, {string} sMessageHeader and {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showErrorMsg: function(sTitle, sMessageHeader, sDetails) {\r\n\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tsMessageHeader, {\r\n\t\t\t\t\tid: \"ErrorMessageBox\",\r\n\t\t\t\t\ttitle: sTitle,\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\ticon: MessageBox.Icon.ERROR,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: MessageBox.Action.CLOSE\r\n\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bMessageOpen = true;\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tJSON.parse(sDetails.responseText).error.message.value,\r\n\t\t\t\t{\r\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails.responseText,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function() {\r\n\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n/*            var oMessage = new Message({\r\n                message: JSON.parse(sDetails.responseText).error.message.value,\r\n                type: MessageType.Error,\r\n                target: \"/Dummy\"\r\n            });\r\n            \r\n            sap.ui.getCore().getMessageManager().addMessages(oMessage);\t*/\t\r\n            \r\n\t\t}\r\n\t});\r\n\r\n});",
		"industry/gov/au/fi/arinv/controller/ListSelector.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/GroupHeaderListItem\"\r\n], function(BaseObject, GroupHeaderListItem) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"industry.gov.au.fi.arinv.model.ListSelector\", {\r\n\r\n\t\t/**\r\n\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t * function.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias industry.gov.au.fi.arinv.model.ListSelector\r\n\t\t */\r\n\r\n\t\tconstructor: function() {\r\n\t\t\tthis._oWhenListHasBeenSet = new Promise(function(fnResolveListHasBeenSet) {\r\n\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t}.bind(this));\r\n\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\tthis.oWhenListLoadingIsDone = new Promise(function(fnResolve, fnReject) {\r\n\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t.then(function(oList) {\r\n\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\tfunction(oData) {\r\n\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: true\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\r\n\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\tfirstListitem: oFirstListItem\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\tlist: oList,\r\n\t\t\t\t\t\t\t\t\t\terror: false\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t * May only be invoked once per ListSelector instance.\r\n\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t * @public\r\n\t\t */\r\n\t\tsetBoundMasterList: function(oList) {\r\n\t\t\tthis._oList = oList;\r\n\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t * no selection/scrolling will happen\r\n\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t * @public\r\n\t\t */\r\n\t\tselectAListItem: function(sBindingPath) {\r\n\r\n\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toList.getItems().some(function(oItem) {\r\n\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction() {\r\n\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath +\r\n\t\t\t\t\t\t\" because the list encountered an error or had no items\");\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {industry.gov.au.fi.arinv.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tattachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t * is called.\r\n\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t * @param {function} oListener the listener object\r\n\t\t * @return {industry.gov.au.fi.arinv.model.ListSelector} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tdetachListSelectionChange: function(fnFunction, oListener) {\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t}.bind(this));\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes all selections from master list.\r\n\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t * @public\r\n\t\t */\r\n\t\tclearMasterListSelection: function() {\r\n\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\tthis._oWhenListHasBeenSet.then(function() {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Find the next valid list item from the master list after the current.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindNextItem: function(sCurrentPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tvar iItemsCount = aItems.length;\r\n\t\t\tif (iItemsCount === 1) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (iItemsCount > 0) {\r\n\t\t\t\tvar bFound = false;\r\n\t\t\t\tfor (var i = 0; i < iItemsCount; i++) {\r\n\t\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\t\tvar oCtx = oItem.getBindingContext(),\r\n\t\t\t\t\t\t\tsPath = oCtx.getPath();\r\n\t\t\t\t\t\tbFound = sPath === sCurrentPath;\r\n\t\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\t\tif (i === iItemsCount - 1) { //the current item is the last but not the only one\r\n\t\t\t\t\t\t\t\treturn aItems[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn aItems[i + 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!bFound) {\r\n\t\t\t\t\treturn null; //not valid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the list item from a path.\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindListItem: function(sPath) {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tfor (var i = 0; i < aItems.length; i++) {\r\n\t\t\t\tvar oItem = aItems[i];\r\n\t\t\t\tif (!(oItem instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\tvar oCtx = oItem.getBindingContext();\r\n\t\t\t\t\tvar bFound = sPath === oCtx.getPath();\r\n\t\t\t\t\tif (bFound) {\r\n\t\t\t\t\t\treturn oItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t},\r\n\t\t/**\r\n\t\t * Find the first list item\r\n\t\t * @return {sap.m.ListItem} the list selector object for method chaining\r\n\t\t * @public\r\n\t\t */\r\n\t\tfindFirstItem: function() {\r\n\t\t\tvar aItems = this._oList.getItems();\r\n\t\t\tif (aItems && aItems.length > 0) {\r\n\t\t\t\treturn aItems[0];\r\n\t\t\t}\r\n\t\t\treturn null; //not found\r\n\t\t}\r\n\t});\r\n\r\n});",
		"industry/gov/au/fi/arinv/controller/App.controller.js": "sap.ui.define([\r\n\t\"industry/gov/au/fi/arinv/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"industry.gov.au.fi.arinv.controller.App\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tbusy: true,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\titemToSelect: null,\r\n\t\t\t\taddEnabled: false,\r\n\t\t\t\tappMode:\"ShowHideMode\",\r\n\t\t\t\tfromMyInbox: false\r\n\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t};\r\n\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\r\n\t\t\t\t.then(fnSetAppNotBusy);\r\n\r\n\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t// after a new list entry has been selected.\r\n\t\t\toListSelector.attachListSelectionChange(function() {\r\n\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\r\n\t\t\t}, this);\r\n\r\n\t\t\t// apply content density mode to root view\r\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t}\r\n\t});\r\n\r\n});",
		"industry/gov/au/fi/arinv/controller/LineItem.controller.js": "sap.ui.define([\r\n\t\"industry/gov/au/fi/arinv/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/m/MessageBox\"\r\n\r\n], function(BaseController, JSONModel, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"industry.gov.au.fi.arinv.controller.LineItem\", {\r\n\r\n\t\t_oBinding: {},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar that = this;\r\n\t\t\tthis.getRouter().getTargets().getTarget(\"lineitem\").attachDisplay(null, this._onDisplay, this);\r\n\t\t\tthis._oODataModel = this.getOwnerComponent().getModel();\r\n\t\t\tthis._oResourceBundle = this.getResourceBundle();\r\n\t\t\tthis._oitemViewModel = new JSONModel({\r\n\t\t\t\tenableCreate: false,\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tmode: \"create\",\r\n\t\t\t\tviewTitle: \"\"\r\n\t\t\t});\r\n\r\n\t\t\t//this.getRouter().getRoute(\"lineitem\").attachPatternMatched(this._onObjectMatched, this);\r\n\t\t\t//this.getRouter().getTargets().getTarget(\"lineitem\").attachDisplay(null, this._onDisplay, this);\r\n\t\t\tthis.setModel(this._oitemViewModel, \"itemViewModel\");\r\n\r\n\t\t\t// Register the view with the message manager\r\n\t\t\tsap.ui.getCore().getMessageManager().registerObject(this.getView(), true);\r\n\t\t\tvar oMessagesModel = sap.ui.getCore().getMessageManager().getMessageModel();\r\n\t\t\tthis._oBinding = new sap.ui.model.Binding(oMessagesModel, \"/\", oMessagesModel.getContext(\"/\"));\r\n\t\t\tthis._oBinding.attachChange(function(oEvent) {\r\n\t\t\t\tvar aMessages = oEvent.getSource().getModel().getData();\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tthat._oitemViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view save button. Saves the changes added by the user. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSave: function() {\r\n\t\t\tvar that = this,\r\n\t\t\t\toModel = this.getModel();\r\n\r\n\t\t\t// abort if the  model has not been changed\r\n\t\t\tif (!oModel.hasPendingChanges()) {\r\n\t\t\t\tMessageBox.information(\r\n\t\t\t\t\tthis._oResourceBundle.getText(\"noChangesMessage\"), {\r\n\t\t\t\t\t\tid: \"noChangesInfoMessageBox\",\r\n\t\t\t\t\t\tstyleClass: that.getOwnerComponent().getContentDensityClass()\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", true);\r\n\t\t\tif (this._oitemViewModel.getProperty(\"/mode\") === \"edit\") {\r\n\t\t\t\t// attach to the request completed event of the batch\r\n\t\t\t\toModel.attachEventOnce(\"batchRequestCompleted\", function(oEvent) {\r\n\t\t\t\t\tif (that._checkIfBatchRequestSucceeded(oEvent)) {\r\n\t\t\t\t\t\tthat._fnUpdateSuccess();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat._fnEntityCreationFailed();\r\n\t\t\t\t\t\tMessageBox.error(that._oResourceBundle.getText(\"updateError\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toModel.submitChanges();\r\n\t\t},\r\n\r\n\t\t_checkIfBatchRequestSucceeded: function(oEvent) {\r\n\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\tvar aRequests = oEvent.getParameters().requests;\r\n\t\t\tvar oRequest;\r\n\t\t\tif (oParams.success) {\r\n\t\t\t\tif (aRequests) {\r\n\t\t\t\t\tfor (var i = 0; i < aRequests.length; i++) {\r\n\t\t\t\t\t\toRequest = oEvent.getParameters().requests[i];\r\n\t\t\t\t\t\tif (!oRequest.success) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler (attached declaratively) for the view cancel button. Asks the user confirmation to discard the changes. \r\n\t\t * @function\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* Internal functions\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Details page\r\n\t\t * @private\r\n\t\t */\r\n\t\t_navBack: function() {\r\n\t\t\t// var oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t// \tsPreviousHash = oHistory.getPreviousHash();\r\n\r\n\t\t\t// this.getView().unbindObject();\r\n\t\t\t// if (sPreviousHash !== undefined) {\r\n\t\t\t// \t// The history contains a previous entry\r\n\t\t\t// \thistory.go(-1);\r\n\t\t\t// } else {\r\n\t\t\t// \tthis.getRouter().getTargets().display(\"object\");\r\n\t\t\t// }\r\n\t\t\t/*Change by Ram - when they click one button it is navigate back to launch pad instead of back*/\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens a dialog letting the user either confirm or cancel the quit and discard of changes.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showConfirmQuitChanges: function() {\r\n\t\t\tvar oComponent = this.getOwnerComponent(),\r\n\t\t\t\toModel = this.getModel();\r\n\r\n\t\t\tvar ocommonModel = this.getModel(\"commonModel\");\r\n\t\t\tvar sMode = this._oitemViewModel.getProperty(\"/mode\");\r\n\t\t\t\r\n\t\t\tvar that = this;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\tthis._oResourceBundle.getText(\"confirmCancelMessage\"), {\r\n\t\t\t\t\tstyleClass: oComponent.getContentDensityClass(),\r\n\t\t\t\t\tonClose: function(oAction) {\r\n\t\t\t\t\t\tif (oAction === sap.m.MessageBox.Action.OK) {\r\n\t\t\t\t\t\t\tthat.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (sMode === \"create\"){\r\n\t\t\t\t\t\t\t\tvar oModelContext = new sap.ui.model.Context(oModel, that._sPath);\r\n\t\t\t\t\t\t\t\toModel.deleteCreatedEntry(oModelContext);\r\n\t\t\t\t\t\t\t\tthat._lineItemTable.removeItem(that._finalColumnListItem);\r\n\t\t\t\t\t\t\t\tvar\tiTotalItems = that._lineItemTable.getItems().length;\r\n\t\t\t\t\t\t\t\tvar\tsTitle = that.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\r\n\t\t\t\t\t\t\t\tthat._detailViewModel.setProperty(\"/lineItemListTitle\", sTitle);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\toModel.resetChanges([that._sPath]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tocommonModel.setProperty(\"/actionFromLineItems\", \"Cancel\");\r\n\t\t\t\t\t\t\tthat._navBack();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Prepares the view for editing the selected object\r\n\t\t * @param {sap.ui.base.Event} oEvent the  display event\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onEdit: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\"),\r\n\t\t\t\toView = this.getView();\r\n\t\t\tthis._oViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\tthis._oViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"editViewTitle\"));\r\n\r\n\t\t\toView.bindElement({\r\n\t\t\t\tpath: oData.objectPath\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Checks if the save button can be enabled\r\n\t\t * @private\r\n\t\t */\r\n\t\t_validateSaveEnablement: function() {\r\n\t\t\tvar aInputControls = this._getFormFields(this.byId(\"newEntitySimpleForm\"));\r\n\t\t\tvar oControl;\r\n\t\t\tfor (var m = 0; m < aInputControls.length; m++) {\r\n\t\t\t\toControl = aInputControls[m].control;\r\n\t\t\t\tif (aInputControls[m].required) {\r\n\t\t\t\t\tvar sValue = oControl.getValue();\r\n\t\t\t\t\tif (!sValue) {\r\n\t\t\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkForErrorMessages();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Checks if there is any wrong inputs that can not be saved.\r\n\t\t * @private\r\n\t\t */\r\n\r\n\t\t_checkForErrorMessages: function() {\r\n\t\t\tvar aMessages = this._oBinding.oModel.oData;\r\n\t\t\tif (aMessages.length > 0) {\r\n\t\t\t\tvar bEnableCreate = true;\r\n\t\t\t\tfor (var i = 0; i < aMessages.length; i++) {\r\n\t\t\t\t\tif (aMessages[i].type === \"Error\" && !aMessages[i].technical) {\r\n\t\t\t\t\t\tbEnableCreate = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", bEnableCreate);\r\n\t\t\t} else {\r\n\t\t\t\tthis._oViewModel.setProperty(\"/enableCreate\", true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnUpdateSuccess: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getView().unbindObject();\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the success of creating an object\r\n\t\t *@param {object} oData the response of the save action\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreated: function(oData) {\r\n\t\t\tvar sObjectPath = this.getModel().createKey(\"InvoiceHeaderentitySet\", oData);\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/itemToSelect\", \"/\" + sObjectPath); //save last created\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t\tthis.getRouter().getTargets().display(\"object\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Handles the failure of creating/updating an object\r\n\t\t * @private\r\n\t\t */\r\n\t\t_fnEntityCreationFailed: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/busy\", false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the form fields\r\n\t\t * @param {sap.ui.layout.form} oSimpleForm the form in the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_getFormFields: function(oSimpleForm) {\r\n\t\t\tvar aControls = [];\r\n\t\t\tvar aFormContent = oSimpleForm.getContent();\r\n\t\t\tvar sControlType;\r\n\t\t\tfor (var i = 0; i < aFormContent.length; i++) {\r\n\t\t\t\tsControlType = aFormContent[i].getMetadata().getName();\r\n\t\t\t\tif (sControlType === \"sap.m.Input\" || sControlType === \"sap.m.DateTimeInput\" ||\r\n\t\t\t\t\tsControlType === \"sap.m.CheckBox\") {\r\n\t\t\t\t\taControls.push({\r\n\t\t\t\t\t\tcontrol: aFormContent[i],\r\n\t\t\t\t\t\trequired: aFormContent[i - 1].getRequired && aFormContent[i - 1].getRequired()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn aControls;\r\n\t\t},\r\n\r\n\t\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//\r\n\t\t//custom coding//\r\n\t\t_onObjectMatched: function(oEvent) {\r\n\t\t\tvar oParameter = oEvent.getParameter(\"arguments\");\r\n\t\t\tfor (var value in oParameter) {\r\n\t\t\t\toParameter[value] = decodeURIComponent(oParameter[value]);\r\n\t\t\t}\r\n\t\t\tvar requestID = oParameter.UId;\r\n\r\n\t\t\tvar sObjectPath = \"InvoiceItemsentitySet('\" + requestID + \"')\";\r\n\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\r\n\t\t},\r\n\r\n\t\tonDoneItem: function(oEvent) {\r\n\t\t\tif(oEvent.getSource().getBindingContext().getProperty(\"Mwskz\")===\"\"){\r\n\t\t\t\tvar _sTaxCode = this.getView().byId(\"taxCodeItem\").getSelectedKey();\r\n\t\t\t\tthis.getModel().setProperty(\"Mwskz\",_sTaxCode,oEvent.getSource().getBindingContext());\r\n\t\t\t}\r\n\t\t\tif(oEvent.getSource().getBindingContext().getProperty(\"Menge\")===\"\"){\r\n\t\t\t\tthis.getModel().setProperty(\"Menge\",\"0.00\",oEvent.getSource().getBindingContext());\r\n\t\t\t}\r\n\t\t\tvar oTableItems = this._lineItemTable.getItems();\r\n\t\t\tvar ocommonModel = this.getModel(\"commonModel\");\r\n\t\t\t//headerTotalAmount\r\n\t\t\tvar sHeaderTotal = this._headerContext.getProperty(\"Dmbtr\");\r\n\t\t\tvar sLineItemsTotal = 0;\r\n\t\t\tvar sBalance = 0;\r\n\t\t\tvar oTableItemContext = {};\r\n\r\n\t\t\t$.each(oTableItems, function(index, oTableItem) {\r\n\t\t\t\toTableItemContext = oTableItem.getBindingContext();\r\n\t\t\t\tsLineItemsTotal = sLineItemsTotal + parseFloat(oTableItemContext.getProperty(\"Wrbtr\"));\r\n\t\t\t});\r\n\r\n\t\t\tsBalance = sHeaderTotal - sLineItemsTotal;\r\n\t\t\tocommonModel.setProperty(\"/Balance\", sBalance);\t\t\t\r\n\t\t\t\r\n\t\t\tthis._navBack();\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// Set busy indicator during view binding\r\n\t\t\tvar oitemViewModel = this.getModel(\"itemViewModel\");\r\n\r\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\toitemViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sObjectPath,\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toitemViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toitemViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toAppViewModel = this.getModel(\"appView\");\r\n\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t// if object could not be found, the selection in the master list\r\n\t\t\t\t// does not make sense anymore.\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tthis._sPath = oElementBinding.getBoundContext().sPath;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonItemCancel: function() {\r\n\t\t\t// check if the model has been changed\r\n\t\t\tif (this.getModel().hasPendingChanges()) {\r\n\t\t\t\t// get user confirmation first\r\n\t\t\t\tthis._showConfirmQuitChanges(); // some other thing here....\r\n\t\t\t} else {\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/addEnabled\", true);\r\n\t\t\t\t// cancel without confirmation\r\n\t\t\t\tthis._navBack();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDisplay: function(oEvent) {\r\n\t\t\tvar oData = oEvent.getParameter(\"data\");\r\n\t\t\tif (oData && oData.mode === \"edit\") {\r\n\t\t\t\tthis._onEditItem(oEvent);\r\n\t\t\t} else if (oData.mode === \"display\") {\r\n\t\t\t\tthis._onDisplayItem(oEvent);\r\n\t\t\t} else {\r\n\t\t\t\tthis._onCreateItem(oEvent);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onDisplayItem: function(oEvent) {\r\n\t\t\tthis._oitemViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createLineItemViewTitle\"));\r\n\t\t\tthis._oitemViewModel.setProperty(\"/mode\", \"display\");\r\n\t\t\tvar data = oEvent.getParameter(\"data\");\r\n\t\t\tvar itemContext = data.itemContext;\r\n\t\t\tthis._lineItemTable = data.table;\r\n\t\t\tthis._headerContext = data.headerContext;\t\t\t\r\n\t\t\tthis._sPath = itemContext.getPath();\r\n\t\t\tthis.getView().setBindingContext(itemContext);\r\n\t\t},\r\n\t\t\r\n\t\t_onEditItem: function(oEvent) {\r\n\t\t\tthis._oitemViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createLineItemViewTitle\"));\r\n\t\t\tthis._oitemViewModel.setProperty(\"/mode\", \"edit\");\r\n\t\t\tvar data = oEvent.getParameter(\"data\");\r\n\t\t\tvar itemContext = data.itemContext;\r\n\t\t\tthis._lineItemTable = data.table;\r\n\t\t\tthis._headerContext = data.headerContext;\r\n\t\t\tthis._sPath = itemContext.getPath();\r\n\t\t\tthis.getView().setBindingContext(itemContext);\t\t\t\r\n\t\t},\r\n\r\n\t\t_onCreateItem: function(oEvent) {\r\n\t\t\tif (oEvent.getParameter(\"name\") && oEvent.getParameter(\"name\") !== \"create\") {\r\n\t\t\t\tthis._oitemViewModel.setProperty(\"/enableCreate\", false);\r\n\t\t\t\tthis.getRouter().getTargets().detachDisplay(null, this._onDisplay, this);\r\n\t\t\t\tthis.getView().unbindObject();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._oitemViewModel.setProperty(\"/viewTitle\", this._oResourceBundle.getText(\"createLineItemViewTitle\"));\r\n\t\t\tthis._oitemViewModel.setProperty(\"/mode\", \"create\");\r\n\t\t\tvar data = oEvent.getParameter(\"data\");\r\n\t\t\tvar reqID = data.UId;\r\n\t\t\tvar NewLineItem = data.Buzei;\r\n\t\t\tvar TaxCode = data.Mwskz;\r\n\t\t\t\r\n\t\t\tthis._lineItemTable = data.table;\r\n\t\t\tthis._headerContext = data.headerContext;\r\n\t\t\tthis._finalColumnListItem = data.finalColumnListItem;\r\n\t\t\tthis._detailViewModel\t\t= data.detailViewModel;\r\n\r\n\t\t\tvar oNewItemContext = data.newItemContext;\r\n\t\t\tthis._sPath = oNewItemContext.getPath();\r\n\r\n\t\t\tthis.getView().setBindingContext(oNewItemContext);\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"industry/gov/au/fi/arinv/view/InvoiceLineItems.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n\t<ColumnListItem type=\"Navigation\" id=\"TableColumnListItem\" press=\"onPressTableItem\">\r\n\t\t<cells>\r\n\t\t\t<Text text=\"{Hkont}\"/>\r\n\t\t\t<Text text=\"{ZfiProductCode}\"/>\r\n\t\t\t<Text text=\"{Menge}\"/>\r\n\t\t\t<Text text=\"{Meins}\"/>\r\n\t\t\t<Text text=\"{Wrbtr}\"/>\r\n\t\t\t<Text text=\"{Kostl}\"/>\r\n\t\t\t<Text text=\"{Posid}\"/>\r\n\t\t\t<Text text=\"{Mwskz}\"/>\r\n\t\t\t<Text text=\"{Sgtxt}\"/>\r\n\t\t</cells>\r\n\t</ColumnListItem>\r\n</core:FragmentDefinition>",
		"industry/gov/au/fi/arinv/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/ui/core/routing/History\"\r\n], function(Controller, History) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"industry.gov.au.fi.arinv.controller.BaseController\", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function() {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler  for navigating back.\r\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\r\n\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash();\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise we go backwards with a forward history\r\n\t\t\t\tvar bReplace = true;\r\n\t\t\t\tthis.getRouter().navTo(\"master\", {}, bReplace);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"industry/gov/au/fi/arinv/view/App.view.xml": "<mvc:View controllerName=\"industry.gov.au.fi.arinv.controller.App\" xmlns:mvc=\"sap.ui.core.mvc\" displayBlock=\"true\" busy=\"{appView>/busy}\"\r\n\tbusyIndicatorDelay=\"{appView>/delay}\" xmlns=\"sap.m\">\r\n\t<SplitApp id=\"idAppControl\" mode=\"{appView>/appMode}\"/>\r\n</mvc:View>",
		"industry/gov/au/fi/arinv/view/UploadCollection.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n\t<UploadCollectionItem documentId=\"{Name}\" fileName=\"{Filename}\" url=\"{ parts: ['UId', 'Line'], formatter: '.formatter.buildFileGetUrl' }\"\r\n\t\tvisibleEdit=\"false\" visibleDelete=\"false\">\r\n\t\t<attributes>\r\n\t\t\t<ObjectAttribute title=\"Creation Time\" text=\"{path:'Creationtime', formatter: '.formatter.getDateAndTime'}\"/>\r\n\t\t\t<ObjectAttribute title=\"File Size\" text=\"{path:'Filesize',formatter: '.formatter.removeLeadingZeroes'} KB\"/>\r\n\t\t</attributes>\r\n\t</UploadCollectionItem>\r\n</core:FragmentDefinition>",
		"industry/gov/au/fi/arinv/view/MessagePopover.fragment.xml": "<core:FragmentDefinition\r\n    xmlns=\"sap.m\"\r\n    xmlns:core=\"sap.ui.core\">\r\n    <MessagePopover\r\n        items=\"{message>/}\"\r\n        initiallyExpanded=\"true\">\r\n        <MessagePopoverItem\r\n            type=\"{message>type}\"\r\n            title=\"{message>message}\"\r\n            subtitle=\"{message>additionalText}\"\r\n            description=\"{message>description}\"/>\r\n    </MessagePopover>\r\n</core:FragmentDefinition>",
		"industry/gov/au/fi/arinv/view/NotFound.view.xml": "<mvc:View controllerName=\"industry.gov.au.fi.arinv.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"industry/gov/au/fi/arinv/view/Master.view.xml": "<mvc:View controllerName=\"industry.gov.au.fi.arinv.controller.Master\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:core=\"sap.ui.core\" xmlns=\"sap.m\"\r\n\txmlns:semantic=\"sap.m.semantic\">\r\n\t<semantic:MasterPage id=\"page\" title=\"{masterView>/title}\" navButtonPress=\"onNavBack\" showNavButton=\"true\">\r\n\t\t<semantic:subHeader>\r\n\t\t\t<Bar id=\"headerBar\">\r\n\t\t\t\t<contentMiddle>\r\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\"\r\n\t\t\t\t\t\tsearch=\"onSearch\" placeholder=\"Search By Customer Name\"></SearchField>\r\n\t\t\t\t</contentMiddle>\r\n\t\t\t\t<!--<contentRight>-->\r\n\t\t\t\t<!--\t<Button icon=\"sap-icon://hint\"  type=\"Emphasized\" press=\"\"/>-->\r\n\t\t\t\t<!--</contentRight>-->\r\n\t\t\t</Bar>\r\n\t\t</semantic:subHeader>\r\n\t\t<semantic:content>\r\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\r\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\r\n\t\t\t<List id=\"list\"\r\n\t\t\t\titems=\"{ path: '/InvoiceHeaderentitySet', sorter: { path: 'UId', descending: true }, groupHeaderFactory: '.createGroupHeader' }\"\r\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\"\r\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\"\r\n\t\t\t\tupdateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\r\n\t\t\t\t<infoToolbar>\r\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\r\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</infoToolbar>\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\" title=\"{UId}\"\r\n\t\t\t\t\t\tnumber=\"{ path: 'Wrbtr', formatter: '.formatter.currencyValue' }\">\r\n\t\t\t\t<attributes>\r\n\t\t\t\t\t<ObjectAttribute text=\"{Kunnr} ({CustName})\" />\r\n\t\t\t\t</attributes>\t\t\t\t\t\t\r\n\t\t\t\t\t</ObjectListItem>\r\n\t\t\t\t</items>\r\n\t\t\t</List>\r\n\t\t</semantic:content>\r\n\t\t<semantic:customFooterContent>\r\n\t\t\t<Button text=\"New Request\" icon=\"sap-icon://add\"  type=\"Emphasized\" press=\"onAdd\"/>\r\n\t\t</semantic:customFooterContent>\r\n\t\t<semantic:sort>\r\n\t\t\t<semantic:SortSelect id=\"sort\" selectedKey=\"{masterView>/sortBy}\" change=\"onSort\">\r\n\t\t\t\t<core:Item id=\"masterSort1\" key=\"CustName\" text=\"{i18n>masterSort1}\"/>\r\n\t\t\t\t<core:Item id=\"masterSort2\" key=\"Wrbtr\" text=\"{i18n>masterSort2}\"/>\r\n\t\t\t</semantic:SortSelect>\r\n\t\t</semantic:sort>\r\n\t\t<semantic:filter>\r\n\t\t\t<semantic:FilterAction id=\"filter\" press=\"onOpenViewSettings\"/>\r\n\t\t</semantic:filter>\r\n\t\t<semantic:group>\r\n\t\t\t<semantic:GroupSelect id=\"group\" selectedKey=\"{masterView>/groupBy}\" change=\"onGroup\">\r\n\t\t\t\t<core:Item id=\"masterGroupNone\" key=\"None\" text=\"{i18n>masterGroupNone}\"/>\r\n\t\t\t\t<core:Item id=\"masterGroup1\" key=\"VendName\" text=\"{i18n>masterGroup1}\"/>\r\n\t\t\t</semantic:GroupSelect>\r\n\t\t</semantic:group>\r\n\t</semantic:MasterPage>\r\n</mvc:View>",
		"industry/gov/au/fi/arinv/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:core=\"sap.ui.core\">\r\n\t<ViewSettingsDialog id=\"viewSettingsDialog\" confirm=\"onConfirmViewSettingsDialog\" resetFilters=\"onViewSettingsDialogResetFilters\">\r\n\t\t<filterItems>\r\n\t\t\t<ViewSettingsFilterItem id=\"filterItems\" text=\"{i18n>masterFilterName}\" key=\"Price\" multiSelect=\"false\">\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter1}\" key=\"Filter1\" id=\"viewFilter1\"/>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter2}\" key=\"Filter2\" id=\"viewFilter2\"/>\r\n\t\t\t\t</items>\r\n\t\t\t</ViewSettingsFilterItem>\r\n\t\t\t<ViewSettingsFilterItem id=\"filterItems2\" text=\"{i18n>masterFilterName2}\" key=\"Type\" multiSelect=\"false\">\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter3}\" key=\"Filter3\" id=\"viewFilter3\"/>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter4}\" key=\"Filter4\" id=\"viewFilter4\"/>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter9}\" key=\"Filter4\" id=\"viewFilter9\"/>\r\n\t\t\t\t</items>\r\n\t\t\t</ViewSettingsFilterItem>\t\r\n\t\t\t<ViewSettingsFilterItem id=\"filterItems3\" text=\"{i18n>masterFilterName3}\" key=\"Status\" multiSelect=\"false\">\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter5}\" key=\"Filter5\" id=\"viewFilter5\"/>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter6}\" key=\"Filter6\" id=\"viewFilter6\"/>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter7}\" key=\"Filter7\" id=\"viewFilter7\"/>\r\n\t\t\t\t\t<ViewSettingsItem text=\"{i18n>masterFilter8}\" key=\"Filter8\" id=\"viewFilter8\"/>\t\t\t\t\t\r\n\t\t\t\t</items>\r\n\t\t\t</ViewSettingsFilterItem>\t\t\t\t\r\n\t\t</filterItems>\r\n\t</ViewSettingsDialog>\r\n</core:FragmentDefinition>",
		"industry/gov/au/fi/arinv/view/DetailNoObjectsAvailable.view.xml": "<mvc:View controllerName=\"industry.gov.au.fi.arinv.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>notAvailableViewTitle}\" text=\"{i18n>noObjectsAvailableText}\" icon=\"{sap-icon://product}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"industry/gov/au/fi/arinv/view/LineItem.view.xml": "<mvc:View controllerName=\"industry.gov.au.fi.arinv.controller.LineItem\" xmlns:core=\"sap.ui.core\" xmlns:f=\"sap.ui.layout.form\"\r\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:l=\"sap.ui.layout\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\"\r\n\txmlns:smart=\"sap.ui.comp.smartfield\" xmlns=\"sap.m\" xmlns:smartField=\"sap.ui.comp.smartfield\">\r\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" title=\"Line Item\" busy=\"{viewModel>/busy}\">\r\n\t\t<semantic:content>\r\n\t\t\t<Panel>\r\n\t\t\t\t<f:SimpleForm class=\"editableForm\" columnsL=\"1\" columnsM=\"1\" editable=\"true\" emptySpanL=\"4\" emptySpanM=\"4\" id=\"lineItemSimpleForm\"\r\n\t\t\t\t\tlabelSpanL=\"3\" labelSpanM=\"3\" layout=\"ResponsiveGridLayout\" maxContainerCols=\"2\" minWidth=\"1024\"\r\n\t\t\t\t\ttitle=\"{= ${viewModel>/mode} === 'edit' || ${viewModel>/mode} === 'display'? 'Edit Line Item': 'Display Line Item'}\">\r\n\t\t\t\t\t<f:content>\r\n\t\t\t\t\t\t<Label text=\"Request ID\"/>\r\n\t\t\t\t\t\t<Input id=\"UId_id\" enabled=\"false\" visible=\"true\" width=\"5rem\"\r\n\t\t\t\t\t\t\tvalue=\"{ path: 'UId', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10, nullable:false } }\"/>\r\n\t\t\t\t\t\t<Label text=\"Item Number\"/>\r\n\t\t\t\t\t\t<Input id=\"Buzei\" enabled=\"false\" visible=\"true\" width=\"3rem\"\r\n\t\t\t\t\t\t\tvalue=\"{ path: 'Buzei', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:10, nullable:false } }\"/>\r\n\t\t\t\t\t\t<smartField:SmartLabel labelFor=\"glAccount\" text=\"GL Account\"/>\r\n\t\t\t\t\t\t<smartField:SmartField value=\"{Hkont}\" id=\"glAccount\" width=\"7rem\"\r\n\t\t\t\t\t\t\teditable=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\"/>\r\n\t\t\t\t\t\t<smartField:SmartLabel labelFor=\"productId\" text=\"Product ID\"/>\r\n\t\t\t\t\t\t<smartField:SmartField value=\"{ZfiProductCode}\" id=\"productId\" width=\"7rem\"\r\n\t\t\t\t\t\t\teditable=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\" />\r\n\t\t\t\t\t\t<Label text=\"Quantity\"/>\r\n\t\t\t\t\t\t<Input id=\"productQuantity\" enabled=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\"\r\n\t\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'Menge' }\" width=\"10rem\" type=\"Number\" placeholder=\"0.00\"/>\r\n\t\t\t\t\t\t<smartField:SmartLabel labelFor=\"uomDetail\" text=\"UoM\"/>\r\n\t\t\t\t\t\t<smartField:SmartField value=\"{Meins}\" id=\"uomDetail\" width=\"5rem\"\r\n\t\t\t\t\t\t\teditable=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\"/>\r\n\t\t\t\t\t\t<Label text=\"Amount\"/>\r\n\t\t\t\t\t\t<Input id=\"itemAmount\" enabled=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\" visible=\"true\"\r\n\t\t\t\t\t\t\tvalue=\"{ path: 'Wrbtr' }\" width=\"10rem\" type=\"Number\" placeholder=\"0.00\"/>\r\n\t\t\t\t\t\t<smartField:SmartLabel labelFor=\"ccCodeItem\" text=\"Cost Center\"/>\r\n\t\t\t\t\t\t<smartField:SmartField value=\"{Kostl}\" id=\"ccCodeItem\" width=\"10rem\"\r\n\t\t\t\t\t\t\teditable=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\" mandatory=\"false\"/>\r\n\t\t\t\t\t\t<smartField:SmartLabel labelFor=\"wbsCodeItem\" text=\"WBS\"/>\r\n\t\t\t\t\t\t<smartField:SmartField value=\"{Posid}\" id=\"wbsCodeItem\" width=\"10rem\"\r\n\t\t\t\t\t\t\teditable=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\" mandatory=\"false\"/>\r\n\t\t\t\t\t\t<!--<smartField:SmartLabel labelFor=\"taxCodeItem\" text=\"Tax Code\"/>-->\r\n\t\t\t\t\t\t<!--<smartField:SmartField value=\"{Mwskz}\" id=\"taxCodeItem\" width=\"4rem\"-->\r\n\t\t\t\t\t\t<!--\teditable=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\"/>-->\r\n\t\t\t\t\t\t<Label text=\"Tax Code\" labelFor=\"taxCodeItem\"/>\r\n\t\t\t\t\t\t<Select id=\"taxCodeItem\" selectedKey=\"{Mwskz}\" width=\"5rem\" items=\"{path : '/ShT007aSet', filters: [{ path: 'IND', operator: 'EQ', value1: 'AR'}] }\"\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tenabled=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\"\r\n\t\t\t\t\t\t\tshowSecondaryValues=\"true\"\t>\r\n\t\t\t\t\t\t\t<items>\r\n\t\t\t\t\t\t\t\t<core:ListItem key=\"{Mwskz}\" text=\"{Mwskz}\" additionalText=\"{Text1}\" />\r\n\t\t\t\t\t\t\t</items>\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t<Label text=\"Short Text\"/>\r\n\t\t\t\t\t\t<Input id=\"itemDescription\" enabled=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\"\r\n\t\t\t\t\t\t\tvisible=\"true\" value=\"{ path: 'Sgtxt', type: 'sap.ui.model.odata.type.String' , constraints:{ maxLength:50, nullable:false } }\"\r\n\t\t\t\t\t\t\tmaxLength=\"50\"/>\r\n\t\t\t\t\t</f:content>\r\n\t\t\t\t</f:SimpleForm>\r\n\t\t\t</Panel>\r\n\t\t</semantic:content>\r\n\t\t<semantic:customFooterContent>\r\n\t\t\t<Button id=\"doneDetailButton\" press=\"onDoneItem\" text=\"Done\" type=\"Accept\" visible=\"true\"/>\r\n\t\t\t<Button id=\"cancelDetailButton\" press=\"onItemCancel\" text=\"Cancel\" type=\"Reject\"\r\n\t\t\t\tvisible=\"{= ${itemViewModel>/mode} === 'edit' || ${itemViewModel>/mode} === 'create' ? true: false}\"/>\r\n\t\t</semantic:customFooterContent>\r\n\t</semantic:DetailPage>\r\n</mvc:View>",
		"industry/gov/au/fi/arinv/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\t};\r\n\r\n});",
		"industry/gov/au/fi/arinv/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Rounds the currency value to 2 digits\r\n\t\t *\r\n\t\t * @public\r\n\t\t * @param {string} sValue value to be formatted\r\n\t\t * @returns {string} formatted currency value with 2 digits\r\n\t\t */\r\n\t\tcurrencyValue: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t},\r\n\r\n\t\tgetTableMode: function(sMode, sStatus) {\r\n\t\t\tif (sMode) {\r\n\t\t\t\tif ((sMode === \"edit\" || sMode === \"create\") && sStatus !== \"REQ_SUBMIT\" && sStatus !== \"REQ_APPR\" && sStatus !== \"REQ_REJECT\") {\r\n\t\t\t\t\treturn \"Delete\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn \"None\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn \"None\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDetailViewTitle: function(sUId, sNewTitle) {\r\n\t\t\tif (sUId) {\r\n\t\t\t\treturn sUId;\r\n\t\t\t} else {\r\n\t\t\t\treturn sNewTitle;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbuildFileGetUrl: function(sUId, sZsequence) {\r\n\t\t\treturn \"/sap/opu/odata/sap/ZFI_AR_INVOICE_SRV/InvoiceAttachmentsentitySet(UId=\\'\" + sUId + \"\\',Line='\" + sZsequence + \"')/$value\";\r\n\t\t},\r\n\r\n\t\tremoveLeadingZeroes: function(sValue) {\r\n\t\t\treturn parseInt(sValue, 10);\r\n\r\n\t\t},\r\n\r\n\t\tisEditable: function(sStatus, sMode) {\r\n\t\t\tif (sMode) {\r\n\t\t\t\tif ((sMode === \"edit\" || sMode === \"create\") && sStatus !== \"REQ_SUBMIT\" && sStatus !== \"REQ_APPR\" && sStatus !== \"REQ_REJECT\") {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDateAndTime: function(sDateTime) {\r\n\r\n\t\t\tif (sDateTime) {\r\n\t\t\t\tvar dateTime = sDateTime.slice(6, 10);\r\n\t\t\t\tvar finalDateTime = dateTime.concat(\".\", sDateTime.slice(4, 6), \".\", sDateTime.slice(2, 4), \" \", sDateTime.slice(10, 12), \":\",\r\n\t\t\t\t\tsDateTime.slice(12, 14),\r\n\t\t\t\t\t\":\", sDateTime.slice(14, 16));\r\n\r\n\t\t\t\treturn finalDateTime;\r\n\t\t\t} else {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetFlagText: function(sInvType) {\r\n\t\t\tif (sInvType === \"1\") {\r\n\t\t\t\treturn \"Does the invoice value exceed $1000?\";\r\n\t\t\t} else if (sInvType === \"2\") {\r\n\t\t\t\treturn \"Does the refund exceed $30000 AUD?\";\r\n\t\t\t} else if (sInvType === \"3\") {\r\n\t\t\t\treturn \"Does the Adjustment exceed $30000 AUD?\";\r\n\t\t\t} else {\r\n\t\t\t\treturn \"Does the invoice value exceed $1000?\";\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetLabelForAmount: function(sInvType) {\r\n\t\t\tif (sInvType === \"1\") {\r\n\t\t\t\treturn \"Invoice Amount (Incl GST)\";\r\n\t\t\t} else if (sInvType === \"2\") {\r\n\t\t\t\treturn \"Refund Amount (Incl GST)\";\r\n\t\t\t} else if (sInvType === \"3\") {\r\n\t\t\t\treturn \"Adjustment Amount (Incl GST)\";\r\n\t\t\t} else {\r\n\t\t\t\treturn \"Invoice Amount\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetLabelForOriginalInvoice: function(sInvType) {\r\n\t\t\tif (sInvType === \"2\") {\r\n\t\t\t\treturn \"Original Invoice/Receipt Number\";\r\n\t\t\t} else if (sInvType === \"3\") {\r\n\t\t\t\treturn \"Original Invoice\";\r\n\t\t\t} else {\r\n\t\t\t\treturn \"Original Invoice/Receipt Number\";\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\r\n\t};\r\n\r\n});",
		"industry/gov/au/fi/arinv/model/GroupSortState.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/ui/model/Sorter\"\r\n], function(BaseObject, Sorter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"industry.gov.au.fi.arinv.model.GroupSortState\", {\r\n\r\n\t\t/**\r\n\t\t * Creates sorters and groupers for the master list.\r\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\r\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\r\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @alias industry.gov.au.fi.arinv.model.GroupSortState\r\n\t\t */\r\n\t\tconstructor: function(oViewModel, fnGroupFunction) {\r\n\t\t\tthis._oViewModel = oViewModel;\r\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sorts by VendName, or by Dmbtr\r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tsort: function(sKey) {\r\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\r\n\r\n\t\t\tif (sGroupedBy !== \"None\") {\r\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\r\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\r\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\r\n\t\t\t}\r\n\r\n\t\t\treturn [new Sorter(sKey, false)];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Groups by Dmbtr, or resets the grouping for the key \"None\"\r\n\t\t *\r\n\t\t * @param sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tgroup: function(sKey) {\r\n\t\t\tvar aSorters = [];\r\n\r\n\t\t\tif (sKey === \"Dmbtr\") {\r\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"Dmbtr\");\r\n\r\n\t\t\t\taSorters.push(\r\n\t\t\t\t\tnew Sorter(\"Dmbtr\", false,\r\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\r\n\t\t\t\t);\r\n\t\t\t} else if (sKey === \"None\") {\r\n\t\t\t\t// select the default sorting again\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"VendName\");\r\n\t\t\t}\r\n\r\n\t\t\treturn aSorters;\r\n\t\t}\r\n\r\n\t});\r\n});",
		"industry/gov/au/fi/arinv/view/DetailObjectNotFound.view.xml": "<mvc:View controllerName=\"industry.gov.au.fi.arinv.controller.BaseController\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage id=\"page\" title=\"{i18n>detailTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\" navButtonPress=\"onNavBack\"></MessagePage>\r\n</mvc:View>",
		"industry/gov/au/fi/arinv/model/grouper.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\t/*\r\n\t * Use this file to implement your custom grouping functions\r\n\t * The predefined functions are simple examples and might be replaced by your more complex implementations\r\n\t * to be called with .bind() and handed over to a sap.ui.model.Sorter\r\n\t * return value for all your functions is an object with  key-text pairs\r\n\t * the oContext parameter is not under your control!\r\n\t */\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Groups the items by a price in two groups: Lesser equal than 20 and greater than 20\r\n\t\t * This grouping function needs the resource bundle so we pass it as a dependency\r\n\t\t * @param oResourceBundle {sap.ui.model.resource.ResourceModel} the resource bundle of your i18n model\r\n\t\t * @returns {Function} the grouper function you can pass to your sorter\r\n\t\t */\r\n\t\tDmbtr: function(oResourceBundle) {\r\n\t\t\treturn function(oContext) {\r\n\t\t\t\tvar iPrice = oContext.getProperty(\"Dmbtr\"),\r\n\t\t\t\t\tsKey,\r\n\t\t\t\t\tsText;\r\n\r\n\t\t\t\tif (iPrice <= 20) {\r\n\t\t\t\t\tsKey = \"LE20\";\r\n\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header1\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsKey = \"GT20\";\r\n\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header2\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tkey: sKey,\r\n\t\t\t\t\ttext: sText\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t};\r\n});",
		"industry/gov/au/fi/arinv/localService/mockserver.js": "sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\"\r\n], function(MockServer) {\r\n\t\"use strict\";\r\n\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"industry/gov/au/fi/arinv/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\r\n\t\tinit: function() {\r\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\tsEntity = \"InvoiceHeaderentitySet\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function(oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t */\r\n\t\tgetMockServer: function() {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});"
	}
});